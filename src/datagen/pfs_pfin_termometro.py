import random

from faker import Faker
from jsonl_convert import input_num_linhas, jsonl_data

faker = Faker('pt_BR')

def function_pfs_pfin_termometro(num_records):
    data = {'ajustes_interfaces_remuneracao': [],'ativacao_credito': [],'ativacao_credito_dock_onefpay': [],'ativacao_debito': [],'ativacao_veloe': [],'base_termometro_cancelamento': [],'base_termometro_carteira': [],'captacao_credito': [],'captacao_veloe': [],'emprestimo_fgts_inss': [],'emprestimo_onidata': [],'etl_transacao_adesao_multiplo': [],'etl_transacao_ativacao_debito': [],'etl_transacao_emprestimo': [],'etl_transacao_pfin_ind_cartao': [],'etl_trans_adesao_flex_multiplo': [],'etl_trans_grade_multiplo': [],'export_interfaces_produtividade_loja': [],'export_interfaces_remuneracao': [],'flex_multiplo': [],'grade_multiplo': [],'parametros': [],'parametros_bckp': [],'parametros_execucao': [],'parametros_execucao_bckp': [],'participacao_indicadores': [],'receita_pfin_parametros': [],'remuneracao_ativacao_debito': [],'remuneracao_cartao': [],'remuneracao_emprestimo_fgts_inss': [],'remuneracao_emprestimo_onidata': [],'remuneracao_fracionada_ssa': [],'remuneracao_pagto_adesao': [],'remuneracao_pagto_grf': [],'remuneracao_participacao_loja': [],'remuneracao_prim_pagto_ssa': [],'remuneracao_seguro_ssa': [],'remuneracao_tag': [],'seguro_venda_credit': []}
    for _ in range(num_records):
        ajustes_interfaces_remuneracao_faker = {
            'dat_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dat_indicador_original': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_indicador': faker.random_int(),
            'nm_indicador': faker.word(),
            'nm_indicador_frontend': faker.word(),
            'cod_estabelecimento': faker.random_int(),
            'cod_produto_valor_pfin': faker.random_int(),
            'cod_produto_seguro_so': faker.random_int(),
            'id_produto_seguro_so': faker.random_int(),
            'id_plano_seguro': faker.random_int(),
            'cd_interface_colab_rh': faker.random_int(),
            'cd_interface_loja_rh': faker.random_int(),
            'num_chapa_vendedor': faker.random_int(),
            'id_adesao_seguro': faker.random_int(),
            'qtd_real_indicador_original': faker.random_int(),
            'val_real_indicador_original': faker.random_number(digits=5, fix_len=True),
            'qtd_real_indicador': faker.random_int(),
            'val_real_indicador': faker.random_number(digits=5, fix_len=True),
            'qtde_ajuste': faker.random_int(),
            'vlr_ajuste': faker.random_number(digits=5, fix_len=True),
            'flg_indicador': faker.word(),
            'des_tip_origem': faker.word(),
            'mtv_ajuste': faker.word(),
            'obs_ajuste': faker.paragraph(),
            'nm_processo': faker.word(),
            'num_anomes_indicador_atual': faker.random_int(),
            'dat_incl_registro': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_anomes_indicador': faker.date_time().strftime('%Y-%m-%d')
        }
        data['ajustes_interfaces_remuneracao'].append(ajustes_interfaces_remuneracao_faker)

        ativacao_credito_faker = {
            'dat_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_indicador': faker.word(),
            'nm_indicador': faker.word(),
            'nm_indicador_frontend': faker.word(),
            'id_cliente_so': faker.random_int(),
            'num_cpf_cliente': faker.bothify(text='###########'),
            'nom_cliente': faker.name(),
            'ind_titular': faker.random_int(),
            'id_evento_transacao': faker.uuid4(),
            'cod_tipo_operacao': faker.random_int(),
            'des_tipo_operacao': faker.word(),
            'id_conta': faker.random_int(),
            'dth_adesao_conta': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_sit_conta': faker.random_int(),
            'des_sit_conta': faker.word(),
            'dth_sit_conta': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'id_cartao': faker.random_int(),
            'id_produto_cartao': faker.random_int(),
            'nom_produto_cartao': faker.word(),
            'dat_emissao_cartao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_estabelecimento': faker.random_int(),
            'nom_estabelecimento': faker.company(),
            'cod_regional': faker.random_int(),
            'des_regional': faker.word(),
            'cod_micro_regiao': faker.random_int(),
            'des_micro_regiao': faker.word(),
            'cod_produto_financeiro': faker.random_int(),
            'des_produto_financeiro': faker.word(),
            'qtd_prev_venda': faker.random_int(),
            'val_prev_venda': faker.random_number(digits=5, fix_len=True),
            'dth_real_venda': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'val_real_venda': faker.random_number(digits=5, fix_len=True),
            'qtd_real_venda': faker.random_int(),
            'des_canal': faker.word(),
            'qtd_parcelas': faker.random_int(),
            'num_chapa_vendedor': faker.random_int(),
            'nom_vendedor': faker.name(),
            'cod_cargo_vendedor': faker.random_int(),
            'des_cargo_vendedor': faker.word(),
            'flg_indicador': faker.word(),
            'id_regra_indicador': faker.random_int(),
            'nm_regra_indicador': faker.word(),
            'obs_regra_indicador': faker.paragraph(),
            'dat_inclusao_reg': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_anomes_indicador': faker.date_time().strftime('%Y-%m-%d')
        }
        data['ativacao_credito'].append(ativacao_credito_faker)

        ativacao_credito_dock_onefpay_faker = {
            'des_origem': faker.word(),
            'dat_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_indicador': faker.word(),
            'nm_indicador': faker.word(),
            'nm_indicador_frontend': faker.word(),
            'id_cliente_so': faker.random_int(),
            'num_cpf_cliente': faker.bothify(text='###########'),
            'nom_cliente': faker.name(),
            'ind_titular': faker.random_int(),
            'id_conta': faker.random_int(),
            'dth_adesao_conta': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_sit_conta': faker.random_int(),
            'des_sit_conta': faker.word(),
            'dth_sit_conta': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'id_cartao': faker.random_int(),
            'id_produto_cartao': faker.random_int(),
            'nom_produto_cartao': faker.word(),
            'dat_emissao_cartao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_desbloqueio_cartao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_estabelecimento': faker.random_int(),
            'nom_estabelecimento': faker.company(),
            'cod_regional': faker.random_int(),
            'des_regional': faker.word(),
            'cod_micro_regiao': faker.random_int(),
            'des_micro_regiao': faker.word(),
            'cod_produto_financeiro': faker.random_int(),
            'des_produto_financeiro': faker.word(),
            'qtd_prev_venda': faker.random_int(),
            'val_prev_venda': faker.random_number(digits=5, fix_len=True),
            'dth_real_venda': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'val_real_venda': faker.random_number(digits=5, fix_len=True),
            'qtd_real_venda': faker.random_int(),
            'des_canal': faker.word(),
            'num_chapa_vendedor': faker.random_int(),
            'nom_vendedor': faker.name(),
            'cod_cargo_vendedor': faker.random_int(),
            'des_cargo_vendedor': faker.word(),
            'flg_indicador': faker.word(),
            'id_regra_indicador': faker.random_int(),
            'nm_regra_indicador': faker.word(),
            'obs_regra_indicador': faker.paragraph(),
            'dat_inclusao_reg': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_anomes_indicador': faker.date_time().strftime('%Y-%m-%d')
        }
        data['ativacao_credito_dock_onefpay'].append(ativacao_credito_dock_onefpay_faker)

        ativacao_debito_faker = {
            'dat_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_indicador': faker.word(),
            'nm_indicador': faker.word(),
            'nm_indicador_frontend': faker.word(),
            'id_cliente_so': faker.random_int(),
            'num_cpf_cliente': faker.bothify(text='###########'),
            'nom_cliente': faker.name(),
            'ind_titular': faker.random_int(),
            'id_evento_transacao': faker.uuid4(),
            'cod_tipo_operacao': faker.random_int(),
            'des_tipo_operacao': faker.word(),
            'id_conta': faker.random_int(),
            'dth_adesao_conta': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_sit_conta': faker.random_int(),
            'des_sit_conta': faker.word(),
            'dth_sit_conta': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'id_cartao': faker.random_int(),
            'id_produto_cartao': faker.random_int(),
            'nom_produto_cartao': faker.word(),
            'dat_emissao_cartao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_estabelecimento': faker.random_int(),
            'nom_estabelecimento': faker.company(),
            'cod_regional': faker.random_int(),
            'des_regional': faker.word(),
            'cod_micro_regiao': faker.random_int(),
            'des_micro_regiao': faker.word(),
            'cod_produto_financeiro': faker.random_int(),
            'des_produto_financeiro': faker.word(),
            'qtd_prev_venda': faker.random_int(),
            'val_prev_venda': faker.random_number(digits=5, fix_len=True),
            'dth_real_venda': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'val_real_venda': faker.random_number(digits=5, fix_len=True),
            'qtd_real_venda': faker.random_int(),
            'des_canal': faker.word(),
            'qtd_parcelas': faker.random_int(),
            'num_chapa_vendedor': faker.random_int(),
            'nom_vendedor': faker.name(),
            'cod_cargo_vendedor': faker.random_int(),
            'des_cargo_vendedor': faker.word(),
            'flg_indicador': faker.word(),
            'dat_inclusao_reg': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_anomes_indicador': faker.date_time().strftime('%Y-%m-%d')
        }
        data['ativacao_debito'].append(ativacao_debito_faker)

        ativacao_veloe_faker = {
            'dat_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_indicador': faker.word(),
            'nm_indicador': faker.word(),
            'nm_indicador_frontend': faker.word(),
            'id_cliente_so': faker.random_int(),
            'num_cpf_cliente': faker.bothify(text='###########'),
            'nom_cliente': faker.name(),
            'ind_titular': faker.random_int(),
            'id_evento_transacao': faker.uuid4(),
            'cod_tipo_operacao': faker.random_int(),
            'des_tipo_operacao': faker.word(),
            'id_conta': faker.random_int(),
            'dth_adesao_conta': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_sit_conta': faker.random_int(),
            'des_sit_conta': faker.word(),
            'dth_sit_conta': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'id_cartao': faker.random_int(),
            'id_produto_cartao': faker.random_int(),
            'nom_produto_cartao': faker.word(),
            'dat_emissao_cartao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_estabelecimento': faker.random_int(),
            'nom_estabelecimento': faker.company(),
            'cod_regional': faker.random_int(),
            'des_regional': faker.word(),
            'cod_micro_regiao': faker.random_int(),
            'des_micro_regiao': faker.word(),
            'cod_produto_financeiro': faker.random_int(),
            'des_produto_financeiro': faker.word(),
            'qtd_prev_venda': faker.random_int(),
            'val_prev_venda': faker.random_number(digits=5, fix_len=True),
            'dth_real_venda': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'val_real_venda': faker.random_number(digits=5, fix_len=True),
            'qtd_real_venda': faker.random_int(),
            'des_canal': faker.word(),
            'qtd_parcelas': faker.random_int(),
            'num_chapa_vendedor': faker.random_int(),
            'nom_vendedor': faker.name(),
            'cod_cargo_vendedor': faker.random_int(),
            'des_cargo_vendedor': faker.word(),
            'flg_indicador': faker.word(),
            'dat_inclusao_reg': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_anomes_indicador': faker.date_time().strftime('%Y-%m-%d')
        }
        data['ativacao_veloe'].append(ativacao_veloe_faker)

        base_termometro_cancelamento_faker = {
            'dth_cancelamento': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_adesao_cancel': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_estabelecimento_adesao': faker.random_int(),
            'cod_estabelecimento_cancel': faker.random_int(),
            'id_produto_financeiro': faker.random_int(),
            'produto': faker.word(),
            'num_apolice_seguro': faker.random_int(),
            'num_cpf_cliente': faker.random_int(),
            'num_chapa_adesao': faker.random_int(),
            'num_chapa_cancel': faker.random_int(),
            'canal_cancelamento': faker.word(),
            'safra_cancelamento': faker.random_number(digits=5, fix_len=True),
            'qtde_cancelamento': faker.random_int(),
            'val_cancelamento': faker.random_number(digits=5, fix_len=True),
            'solicitacao': faker.random_int(),
            'inadimplencia': faker.random_int(),
            'anomes_cancelamento': faker.date_time().strftime('%Y-%m-%d')
        }
        data['base_termometro_cancelamento'].append(base_termometro_cancelamento_faker)

        base_termometro_carteira_faker = {
            'dth_carteira': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_adesao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_cancelamento': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'id_produto_financeiro': faker.random_int(),
            'produto': faker.word(),
            'canal_venda': faker.word(),
            'nom_estabelecimento': faker.company(),
            'cod_estabelecimento_adesao': faker.random_int(),
            'num_chapa_cancel': faker.random_int(),
            'num_apolice_seguro': faker.random_int(),
            'nom_funcionario': faker.name(),
            'num_chapa_adesao': faker.random_int(),
            'chapa_canc_nom_funcionario': faker.name(),
            'chapa_nom_funcionario': faker.name(),
            'tempo_casa': faker.word(),
            'status_funcionario': faker.word(),
            'qtde_carteira': faker.random_int(),
            'anomes': faker.date_time().strftime('%Y-%m-%d')
        }
        data['base_termometro_carteira'].append(base_termometro_carteira_faker)

        captacao_credito_faker = {
            'dat_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_indicador': faker.word(),
            'nm_indicador': faker.word(),
            'nm_indicador_frontend': faker.word(),
            'id_cliente_so': faker.random_int(),
            'num_cpf_cliente': faker.bothify(text='###########'),
            'nom_cliente': faker.name(),
            'ind_titular': faker.random_int(),
            'id_evento_transacao': faker.uuid4(),
            'cod_tipo_operacao': faker.random_int(),
            'des_tipo_operacao': faker.word(),
            'id_conta': faker.random_int(),
            'dth_adesao_conta': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_sit_conta': faker.random_int(),
            'des_sit_conta': faker.word(),
            'dth_sit_conta': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'id_cartao': faker.random_int(),
            'id_produto_cartao': faker.random_int(),
            'nom_produto_cartao': faker.word(),
            'dat_emissao_cartao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_desbloqueio_cartao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_estabelecimento': faker.random_int(),
            'nom_estabelecimento': faker.company(),
            'cod_regional': faker.random_int(),
            'des_regional': faker.word(),
            'cod_micro_regiao': faker.random_int(),
            'des_micro_regiao': faker.word(),
            'cod_produto_financeiro': faker.random_int(),
            'des_produto_financeiro': faker.word(),
            'qtd_prev_venda': faker.random_int(),
            'val_prev_venda': faker.random_number(digits=5, fix_len=True),
            'dth_real_venda': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'val_real_venda': faker.random_number(digits=5, fix_len=True),
            'qtd_real_venda': faker.random_int(),
            'des_canal': faker.word(),
            'qtd_parcelas': faker.random_int(),
            'num_chapa_vendedor': faker.random_int(),
            'nom_vendedor': faker.name(),
            'cod_cargo_vendedor': faker.random_int(),
            'des_cargo_vendedor': faker.word(),
            'flg_indicador': faker.word(),
            'id_regra_indicador': faker.random_int(),
            'nm_regra_indicador': faker.word(),
            'obs_regra_indicador': faker.paragraph(),
            'dat_inclusao_reg': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_anomes_indicador': faker.date_time().strftime('%Y-%m-%d')
        }
        data['captacao_credito'].append(captacao_credito_faker)

        captacao_veloe_faker = {
            'dat_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_indicador': faker.word(),
            'nm_indicador': faker.word(),
            'nm_indicador_frontend': faker.word(),
            'id_cliente_so': faker.random_int(),
            'num_cpf_cliente': faker.bothify(text='###########'),
            'nom_cliente': faker.name(),
            'ind_titular': faker.random_int(),
            'id_evento_transacao': faker.uuid4(),
            'cod_tipo_operacao': faker.random_int(),
            'des_tipo_operacao': faker.word(),
            'id_conta': faker.random_int(),
            'dth_adesao_conta': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_sit_conta': faker.random_int(),
            'des_sit_conta': faker.word(),
            'dth_sit_conta': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'id_cartao': faker.random_int(),
            'id_produto_cartao': faker.random_int(),
            'nom_produto_cartao': faker.word(),
            'dat_emissao_cartao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_estabelecimento': faker.random_int(),
            'nom_estabelecimento': faker.company(),
            'cod_regional': faker.random_int(),
            'des_regional': faker.word(),
            'cod_micro_regiao': faker.random_int(),
            'des_micro_regiao': faker.word(),
            'cod_produto_financeiro': faker.random_int(),
            'des_produto_financeiro': faker.word(),
            'qtd_prev_venda': faker.random_int(),
            'val_prev_venda': faker.random_number(digits=5, fix_len=True),
            'dth_real_venda': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'val_real_venda': faker.random_number(digits=5, fix_len=True),
            'qtd_real_venda': faker.random_int(),
            'des_canal': faker.word(),
            'qtd_parcelas': faker.random_int(),
            'num_chapa_vendedor': faker.random_int(),
            'nom_vendedor': faker.name(),
            'cod_cargo_vendedor': faker.random_int(),
            'des_cargo_vendedor': faker.word(),
            'flg_indicador': faker.word(),
            'dat_inclusao_reg': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_anomes_indicador': faker.date_time().strftime('%Y-%m-%d')
        }
        data['captacao_veloe'].append(captacao_veloe_faker)

        emprestimo_fgts_inss_faker = {
            'dat_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_indicador': faker.word(),
            'nm_indicador': faker.word(),
            'nm_indicador_frontend': faker.word(),
            'origem_venda': faker.word(),
            'id_contrato': faker.random_int(),
            'id_numero': faker.uuid4(),
            'id_beneficio': faker.uuid4(),
            'dat_cadastro': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dat_venda': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_cpf_cliente': faker.bothify(text='###########'),
            'nom_cliente': faker.name(),
            'cod_estabelecimento': faker.random_int(),
            'nom_estabelecimento': faker.company(),
            'nom_estabelecimento_so': faker.company(),
            'cod_regional': faker.random_int(),
            'des_regional': faker.word(),
            'cod_micro_regiao': faker.random_int(),
            'des_micro_regiao': faker.word(),
            'cod_produto_financeiro': faker.random_int(),
            'des_produto_financeiro': faker.word(),
            'cod_produto_indicador': faker.random_int(),
            'des_status': faker.word(),
            'dat_ult_status': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'qtd_prev_venda': faker.random_int(),
            'val_prev_venda': faker.random_number(digits=5, fix_len=True),
            'dth_real_venda': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'val_real_venda': faker.random_number(digits=5, fix_len=True),
            'qtd_real_venda': faker.random_int(),
            'des_canal': faker.word(),
            'qtd_parcelas': faker.random_int(),
            'val_parcela': faker.random_number(digits=5, fix_len=True),
            'val_troco': faker.random_number(digits=5, fix_len=True),
            'num_chapa_vendedor': faker.random_int(),
            'nom_vendedor': faker.name(),
            'cod_cargo_vendedor': faker.random_int(),
            'des_cargo_vendedor': faker.word(),
            'flg_fun_ec_pefisa': faker.word(),
            'flg_indicador': faker.word(),
            'id_regra_indicador': faker.random_int(),
            'nm_regra_indicador': faker.word(),
            'obs_regra_indicador': faker.paragraph(),
            'dat_inclusao_reg': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_anomes_indicador': faker.date_time().strftime('%Y-%m-%d')
        }
        data['emprestimo_fgts_inss'].append(emprestimo_fgts_inss_faker)

        emprestimo_onidata_faker = {
            'dat_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_indicador': faker.word(),
            'nm_indicador': faker.word(),
            'nm_indicador_frontend': faker.word(),
            'origem_venda': faker.word(),
            'id_contrato': faker.uuid4(),
            'id_numero': faker.uuid4(),
            'ip_assinatura': faker.ipv4(),
            'num_cpf_cliente': faker.bothify(text='###########'),
            'nom_cliente': faker.name(),
            'cod_estabelecimento': faker.random_int(),
            'nom_estabelecimento': faker.company(),
            'cod_regional': faker.random_int(),
            'des_regional': faker.word(),
            'cod_micro_regiao': faker.random_int(),
            'des_micro_regiao': faker.word(),
            'cod_produto_financeiro': faker.random_int(),
            'des_produto_financeiro': faker.word(),
            'cod_produto_indicador': faker.random_int(),
            'nm_produto_indicador': faker.word(),
            'cod_produto_so': faker.word(),
            'des_status': faker.word(),
            'dat_ult_status': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'qtd_prev_venda': faker.random_int(),
            'val_prev_venda': faker.random_number(digits=5, fix_len=True),
            'dth_real_venda': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'val_real_venda': faker.random_number(digits=5, fix_len=True),
            'qtd_real_venda': faker.random_int(),
            'des_canal': faker.word(),
            'qtd_parcelas': faker.random_int(),
            'val_parcela': faker.random_number(digits=5, fix_len=True),
            'val_troco': faker.random_number(digits=5, fix_len=True),
            'val_juros': faker.random_number(digits=5, fix_len=True),
            'num_chapa_vendedor': faker.random_int(),
            'nom_vendedor': faker.name(),
            'cod_cargo_vendedor': faker.random_int(),
            'des_cargo_vendedor': faker.word(),
            'flg_fun_ec_pefisa': faker.word(),
            'flg_indicador': faker.word(),
            'id_regra_indicador': faker.random_int(),
            'nm_regra_indicador': faker.word(),
            'obs_regra_indicador': faker.paragraph(),
            'dat_inclusao_reg': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_anomes_indicador': faker.date_time().strftime('%Y-%m-%d')
        }
        data['emprestimo_onidata'].append(emprestimo_onidata_faker)

        etl_transacao_adesao_multiplo_faker = {
            'dat_transacao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'id_eventotransacao': faker.uuid4(),
            'cod_status_transacao': faker.random_int(),
            'des_status_transacao': faker.word(),
            'id_transacao': faker.uuid4(),
            'des_transacao': faker.word(),
            'num_cpf': faker.bothify(text='###########'),
            'cod_estabelecimento': faker.random_int(),
            'val_transacao': faker.numerify(text='R$####,##'),
            'id_conta': faker.random_int(),
            'id_cartao': faker.uuid4(),
            'cod_cartao': faker.bothify(text='####-####-####-####'),
            'ind_titular': faker.random_int(),
            'id_produto': faker.random_int(),
            'dat_adesao_conta': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dat_emissao_cartao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_prod_financeiro': faker.bothify(text='??########'),
            'num_chapa_vendedor': faker.random_int(),
            'dat_ult_atu': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'des_canal': faker.word(),
            'qtde_parcelas': faker.numerify(text='##')
        }
        data['etl_transacao_adesao_multiplo'].append(etl_transacao_adesao_multiplo_faker)

        etl_transacao_ativacao_debito_faker = {
            'dat_transacao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'id_eventotransacao': faker.uuid4(),
            'cod_status_transacao': faker.random_int(),
            'des_status_transacao': faker.word(),
            'id_transacao': faker.uuid4(),
            'des_transacao': faker.word(),
            'num_cpf': faker.random_int(),
            'cod_estabelecimento': faker.random_int(),
            'val_transacao': faker.pyfloat(right_digits=2),
            'id_conta': faker.random_int(),
            'id_cartao': faker.uuid4(),
            'cod_cartao': faker.bothify(text='####-####-####-####'),
            'ind_titular': faker.random_int(),
            'id_produto': faker.random_int(),
            'dat_adesao_conta': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dat_emissao_cartao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_prod_financeiro': faker.random_int(),
            'num_chapa_vendedor': faker.random_int(),
            'dat_ult_atu': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'des_canal': faker.word(),
            'qtde_parcelas': faker.numerify(text='##')
        }
        data['etl_transacao_ativacao_debito'].append(etl_transacao_ativacao_debito_faker)

        etl_transacao_emprestimo_faker = {
            'dat_transacao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'id_eventotransacao': faker.random_int(),
            'cod_status_transacao': faker.random_int(),
            'des_status_transacao': faker.word(),
            'id_transacao': faker.random_int(),
            'des_transacao': faker.word(),
            'num_cpf': faker.random_int(),
            'cod_estab_transacao': faker.random_int(),
            'val_transacao': faker.pyfloat(left_digits=3, right_digits=2),
            'id_conta': faker.random_int(),
            'id_cartao': faker.random_int(),
            'cod_cartao': faker.bothify(text='####-####-####-####'),
            'ind_titular': faker.random_int(),
            'id_produto': faker.random_int(),
            'dat_adesao_conta': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dat_emissao_cartao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_prod_financeito': faker.random_int(),
            'qtde_parcelas': faker.random_int(),
            'des_canal': faker.word(),
            'dat_ult_atu': faker.date_time().strftime('%Y-%m-%d %H:%M:%S')
        }
        data['etl_transacao_emprestimo'].append(etl_transacao_emprestimo_faker)

        etl_transacao_pfin_ind_cartao_faker = {
            'dat_transacao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'id_eventotransacao': faker.uuid4(),
            'cod_status_transacao': faker.random_int(),
            'des_status_transacao': faker.word(),
            'id_transacao': faker.uuid4(),
            'des_transacao': faker.word(),
            'num_cpf': faker.bothify(text='###########'),
            'cod_estabelecimento': faker.random_int(),
            'val_transacao': faker.numerify(text='R$####,##'),
            'id_conta': faker.random_int(),
            'id_cartao': faker.uuid4(),
            'cod_cartao': faker.bothify(text='####-####-####-####'),
            'ind_titular': faker.random_int(),
            'id_produto': faker.random_int(),
            'dat_adesao_conta': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dat_emissao_cartao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_prod_financeiro': faker.bothify(text='??########'),
            'num_chapa_vendedor': faker.random_int(),
            'dat_ult_atu': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'des_canal': faker.word(),
            'qtde_parcelas': faker.numerify(text='##'),
            'val_juros': faker.pyfloat(right_digits=2),
            'cod_indicador': faker.random_int(),
            'nm_indicador': faker.word(),
            'nm_indicador_frontend': faker.word(),
            'dat_inclusao_reg': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_anomes_incl_reg': faker.date_time().strftime('%Y-%m-%d')
        }
        data['etl_transacao_pfin_ind_cartao'].append(etl_transacao_pfin_ind_cartao_faker)

        etl_trans_adesao_flex_multiplo_faker = {
            'dat_transacao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'id_eventotransacao': faker.uuid4(),
            'cod_status_transacao': faker.random_int(),
            'des_status_transacao': faker.word(),
            'id_transacao': faker.uuid4(),
            'des_transacao': faker.word(),
            'num_cpf': faker.random_int(),
            'cod_estabelecimento': faker.random_int(),
            'val_transacao': faker.numerify(text='R$####,##'),
            'id_conta': faker.random_int(),
            'id_cartao': faker.uuid4(),
            'cod_cartao': faker.bothify(text='####-####-####-####'),
            'ind_titular': faker.random_int(),
            'id_produto': faker.random_int(),
            'dat_adesao_conta': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dat_emissao_cartao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_prod_financeiro': faker.random_int(),
            'num_chapa_vendedor': faker.bothify(text='??########'),
            'dat_ult_atu': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'des_canal': faker.word(),
            'qtde_parcelas': faker.numerify(text='##')
        }
        data['etl_trans_adesao_flex_multiplo'].append(etl_trans_adesao_flex_multiplo_faker)

        etl_trans_grade_multiplo_faker = {
            'dat_transacao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'id_eventotransacao': faker.uuid4(),
            'cod_status_transacao': faker.random_int(),
            'des_status_transacao': faker.word(),
            'id_transacao': faker.uuid4(),
            'des_transacao': faker.word(),
            'num_cpf': faker.random_int(),
            'cod_estabelecimento': faker.random_int(),
            'val_transacao': faker.numerify(text='R$####,##'),
            'id_conta': faker.random_int(),
            'id_cartao': faker.uuid4(),
            'cod_cartao': faker.bothify(text='####-####-####-####'),
            'ind_titular': faker.random_int(),
            'id_produto_destino': faker.random_int(),
            'dat_adesao_conta': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dat_emissao_cartao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_prod_financeiro': faker.bothify(text='??########'),
            'num_chapa_vendedor': faker.bothify(text='??########'),
            'dat_ult_atu': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'des_canal': faker.word(),
            'qtde_parcelas': faker.numerify(text='##')
        }
        data['etl_trans_grade_multiplo'].append(etl_trans_grade_multiplo_faker)

        export_interfaces_produtividade_loja_faker = {
            'cod_interface': faker.random_int(),
            'dat_referencia': faker.date_time().strftime('%Y-%m-%d'),
            'cod_estabelecimento': faker.random_int(),
            'qtd_quota_prev': faker.random_int(),
            'qtd_quota_real': faker.random_int(),
            'vlr_quota_prev': faker.pyfloat(right_digits=2),
            'vlr_quota_real': faker.pyfloat(right_digits=2),
            'flg_processamento': faker.random_element(elements=('S', 'N')),
            'qtd_quota_prev_receb': faker.random_int(),
            'qtd_quota_real_receb': faker.random_int(),
            'vlr_quota_prev_receb': faker.pyfloat(right_digits=2),
            'vlr_quota_real_receb': faker.pyfloat(right_digits=2),
            'flg_consolidado': faker.random_element(elements=('S', 'N')),
            'per_quota_prev_receb': faker.pyfloat(right_digits=2),
            'per_quota_real_receb': faker.pyfloat(right_digits=2),
            'flg_fechamento': faker.random_element(elements=('S', 'N')),
            'dat_processamento': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'nm_processo': faker.word(),
            'dat_inclusao_reg': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_anomes_incl_reg': faker.date_time().strftime('%Y-%m-%d')
        }
        data['export_interfaces_produtividade_loja'].append(export_interfaces_produtividade_loja_faker)

        export_interfaces_remuneracao_faker = {
            'cod_interface': faker.random_int(),
            'dat_referencia': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_estabelecimento': faker.random_int(),
            'num_chapa_funcionario': faker.random_int(),
            'val_movto': faker.pyfloat(right_digits=2),
            'qtd_cadastro': faker.random_int(),
            'qtd_meses': faker.random_int(),
            'flg_fechamento': faker.random_element(elements=('S', 'N')),
            'dat_processamento': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_contrato': faker.random_int(),
            'num_parcela': faker.random_int(),
            'dat_adesao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_tot_parcela': faker.random_int(),
            'nm_processo': faker.word(),
            'dat_inclusao_reg': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_anomes_incl_reg': faker.date_time().strftime('%Y-%m-%d')
        }
        data['export_interfaces_remuneracao'].append(export_interfaces_remuneracao_faker)

        flex_multiplo_faker = {
            'dat_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_indicador': faker.bothify(text='??########'),
            'nm_indicador': faker.word(),
            'nm_indicador_frontend': faker.word(),
            'id_cliente_so': faker.random_int(),
            'num_cpf_cliente': faker.bothify(text='###########'),
            'nom_cliente': faker.name(),
            'ind_titular': faker.random_int(),
            'id_evento_transacao': faker.uuid4(),
            'cod_tipo_operacao': faker.random_int(),
            'des_tipo_operacao': faker.word(),
            'id_conta': faker.random_int(),
            'dth_adesao_conta': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_sit_conta': faker.random_int(),
            'des_sit_conta': faker.word(),
            'dth_sit_conta': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'id_cartao': faker.random_int(),
            'id_produto_cartao': faker.random_int(),
            'nom_produto_cartao': faker.word(),
            'dat_emissao_cartao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_estabelecimento': faker.random_int(),
            'nom_estabelecimento': faker.company(),
            'cod_regional': faker.random_int(),
            'des_regional': faker.word(),
            'cod_micro_regiao': faker.random_int(),
            'des_micro_regiao': faker.word(),
            'cod_produto_financeiro': faker.random_int(),
            'des_produto_financeiro': faker.word(),
            'qtd_prev_venda': faker.random_int(),
            'val_prev_venda': faker.pyfloat(right_digits=2),
            'dth_real_venda': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'val_real_venda': faker.pyfloat(right_digits=2),
            'qtd_real_venda': faker.random_int(),
            'des_canal': faker.word(),
            'qtd_parcelas': faker.random_int(),
            'num_chapa_vendedor': faker.random_int(),
            'nom_vendedor': faker.name(),
            'cod_cargo_vendedor': faker.random_int(),
            'des_cargo_vendedor': faker.job(),
            'flg_indicador': faker.random_element(elements=('S', 'N')),
            'dat_inclusao_reg': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_anomes_indicador': faker.date_time().strftime('%Y-%m-%d')
        }
        data['flex_multiplo'].append(flex_multiplo_faker)

        grade_multiplo_faker = {
            'dat_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_indicador': faker.bothify(text='??########'),
            'nm_indicador': faker.word(),
            'nm_indicador_frontend': faker.word(),
            'id_cliente_so': faker.random_int(),
            'num_cpf_cliente': faker.bothify(text='###########'),
            'nom_cliente': faker.name(),
            'ind_titular': faker.random_int(),
            'id_evento_transacao': faker.uuid4(),
            'cod_tipo_operacao': faker.random_int(),
            'des_tipo_operacao': faker.word(),
            'id_conta': faker.random_int(),
            'dth_adesao_conta': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_sit_conta': faker.random_int(),
            'des_sit_conta': faker.word(),
            'dth_sit_conta': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'id_cartao': faker.random_int(),
            'id_produto_cartao': faker.random_int(),
            'nom_produto_cartao': faker.word(),
            'dat_emissao_cartao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_desbloqueio_cartao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_estabelecimento': faker.random_int(),
            'nom_estabelecimento': faker.company(),
            'cod_regional': faker.random_int(),
            'des_regional': faker.word(),
            'cod_micro_regiao': faker.random_int(),
            'des_micro_regiao': faker.word(),
            'cod_produto_financeiro': faker.random_int(),
            'des_produto_financeiro': faker.word(),
            'qtd_prev_venda': faker.random_int(),
            'val_prev_venda': faker.pyfloat(right_digits=2),
            'dth_real_venda': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'val_real_venda': faker.pyfloat(right_digits=2),
            'qtd_real_venda': faker.random_int(),
            'des_canal': faker.word(),
            'qtd_parcelas': faker.random_int(),
            'num_chapa_vendedor': faker.random_int(),
            'nom_vendedor': faker.name(),
            'cod_cargo_vendedor': faker.random_int(),
            'des_cargo_vendedor': faker.job(),
            'flg_indicador': faker.random_element(elements=('S', 'N')),
            'id_regra_indicador': faker.random_int(),
            'nm_regra_indicador': faker.word(),
            'obs_regra_indicador': faker.sentence(),
            'dat_inclusao_reg': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_anomes_indicador': faker.date_time().strftime('%Y-%m-%d')
        }
        data['grade_multiplo'].append(grade_multiplo_faker)

        parametros_faker = {
            'nm_termometro': faker.word(),
            'nm_empresa': faker.company(),
            'grp_indicador': faker.word(),
            'cod_indicador': faker.random_int(),
            'nm_indicador': faker.word(),
            'nm_indicador_frontend': faker.word(),
            'tip_objeto_indicador': faker.word(),
            'grp_objeto_indicador': faker.word(),
            'cod_produto_financeiro': faker.random_int(),
            'nm_produto_financeiro': faker.word(),
            'cod_produto_indicador': faker.random_int(),
            'nm_produto_indicador': faker.word(),
            'des_unidade': faker.word(),
            'id_regra': faker.uuid4(),
            'id_plano_seguro': faker.random_int(),
            'cod_produto_valor_pfin': faker.random_int(),
            'cod_produto_so': faker.bothify(text='??########'),
            'cd_interface_colab_rh': faker.random_int(),
            'cd_interface_loja_rh': faker.random_int(),
            'cod_indicador_referencia': faker.random_int(),
            'num_parcela_pfin_fracionada': faker.random_int(),
            'id_prioridade_prod': faker.random_int(),
            'dt_inicio_vigencia_regra': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dt_fim_vigencia_regra': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dt_inclusao_registro': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_anomes_ini_vigencia': faker.date_time().strftime('%Y-%m-%d')
        }
        data['parametros'].append(parametros_faker)

        parametros_bckp_faker = {
            'nm_termometro': faker.word(),
            'nm_empresa': faker.company(),
            'grp_indicador': faker.word(),
            'cod_indicador': faker.random_int(),
            'nm_indicador': faker.word(),
            'nm_indicador_frontend': faker.word(),
            'tip_objeto_indicador': faker.word(),
            'grp_objeto_indicador': faker.word(),
            'cod_produto_financeiro': faker.random_int(),
            'nm_produto_financeiro': faker.word(),
            'cod_produto_indicador': faker.random_int(),
            'nm_produto_indicador': faker.word(),
            'des_unidade': faker.word(),
            'id_regra': faker.uuid4(),
            'id_plano_seguro': faker.random_int(),
            'cod_produto_valor_pfin': faker.random_int(),
            'cod_produto_so': faker.bothify(text='??########'),
            'cd_interface_colab_rh': faker.random_int(),
            'cd_interface_loja_rh': faker.random_int(),
            'cod_indicador_referencia': faker.random_int(),
            'num_parcela_pfin_fracionada': faker.random_int(),
            'id_prioridade_prod': faker.random_int(),
            'dt_inicio_vigencia_regra': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dt_fim_vigencia_regra': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dt_inclusao_registro': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_anomes_ini_vigencia': faker.date_time().strftime('%Y-%m-%d')
        }
        data['parametros_bckp'].append(parametros_bckp_faker)

        parametros_execucao_faker = {
            'nome_processo': faker.word(),
            'dia_corte': faker.random_int(min=1, max=31),
            'periodicidade': faker.random_element(elements=('diaria', 'semanal', 'mensal')),
            'dat_inclusao_reg': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dat_inicio_vigencia': faker.random_int(),
            'dat_fim_vigencia': faker.random_int(),
            'observacao': faker.sentence()
        }
        data['parametros_execucao'].append(parametros_execucao_faker)

        parametros_execucao_bckp_faker = {
            'nome_processo': faker.word(),
            'dia_corte': faker.random_int(min=1, max=31),
            'periodicidade': faker.random_element(elements=('diaria', 'semanal', 'mensal')),
            'dat_inclusao_reg': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dat_inicio_vigencia': faker.random_int(),
            'dat_fim_vigencia': faker.random_int(),
            'observacao': faker.sentence()
        }
        data['parametros_execucao_bckp'].append(parametros_execucao_bckp_faker)

        participacao_indicadores_faker = {
            'dat_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_indicador': faker.random_int(),
            'grp_indicador': faker.word(),
            'nm_empresa': faker.company(),
            'nm_indicador': faker.word(),
            'nm_indicador_frontend': faker.word(),
            'cod_indicador_venda': faker.random_int(),
            'cd_interface_loja_rh_cota': faker.random_int(),
            'cd_interface_colab_rh_cota': faker.random_int(),
            'cod_estabelecimento': faker.random_int(),
            'nom_estabelecimento': faker.company(),
            'cod_regional': faker.random_int(),
            'des_regional': faker.word(),
            'cod_micro_regiao': faker.random_int(),
            'des_micro_regiao': faker.word(),
            'cod_produto_financeiro': faker.random_int(),
            'nm_produto_financeiro': faker.word(),
            'valor_pnb': faker.pyfloat(right_digits=2),
            'valor_ramo': faker.pyfloat(right_digits=2),
            'qtd_prev_indicador': faker.pyfloat(right_digits=2),
            'qtd_real_indicador': faker.pyfloat(right_digits=2),
            'dat_venda_ref': faker.random_int(),
            'dat_inclusao_reg': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_anomes_indicador': faker.date_time().strftime('%Y-%m-%d')
        }
        data['participacao_indicadores'].append(participacao_indicadores_faker)

        receita_pfin_parametros_faker = {
            'data': faker.date_time().strftime('%Y-%m-%d'),
            'id_produto': faker.random_int(),
            'cod_indicador': faker.random_int(),
            'nm_indicador_frontend': faker.word(),
            'nm_produto_financeiro': faker.word(),
            'uni_pro': faker.word(),
            'val_prolabore': faker.pyfloat(right_digits=2),
            'cod_ajustado': faker.random_int(),
            'anomes_prolabore': faker.random_int(),
            'variavel_meta': faker.word(),
            'cod_variavel_meta': faker.random_int(),
            'variavel_real': faker.word(),
            'cod_variavel_real': faker.random_int(),
            'tabela': faker.word(),
            'dth_inclusao_reg': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'ano_mes_particao': faker.bothify(text='####-##')
        }
        data['receita_pfin_parametros'].append(receita_pfin_parametros_faker)

        criar_remuneracao_ativacao_debito = {
            'dat_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_indicador': faker.random_int(),
            'grp_indicador': faker.word(),
            'nm_empresa': faker.company(),
            'nm_indicador': faker.word(),
            'nm_indicador_frontend': faker.word(),
            'cod_indicador_venda': faker.random_int(),
            'cd_interface_loja_rh': faker.random_int(),
            'cd_interface_colab_rh': faker.random_int(),
            'cod_estabelecimento': faker.random_int(),
            'nom_estabelecimento': faker.company(),
            'cod_regional': faker.random_int(),
            'des_regional': faker.word(),
            'cod_micro_regiao': faker.random_int(),
            'des_micro_regiao': faker.word(),
            'cod_produto_financeiro': faker.random_int(),
            'nm_produto_financeiro': faker.word(),
            'num_chapa_vendedor': faker.random_int(),
            'nom_vendedor': faker.name(),
            'cod_cargo_vendedor': faker.random_int(),
            'des_cargo_vendedor': faker.job(),
            'qtd_prev_indicador': faker.random_int(),
            'qtd_real_indicador': faker.random_int(),
            'dat_venda_ref': faker.random_int(),
            'dat_inclusao_reg': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_anomes_indicador': faker.date_time().strftime('%Y-%m-%d')
        }
        data['remuneracao_ativacao_debito'].append(criar_remuneracao_ativacao_debito)

        criar_remuneracao_cartao = {
            'dat_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_indicador': faker.random_int(),
            'grp_indicador': faker.word(),
            'nm_indicador': faker.word(),
            'nm_indicador_frontend': faker.word(),
            'id_evento': faker.random_int(),
            'val_pagamento': faker.pyfloat(right_digits=2),
            'cod_loja_pagamento': faker.random_int(),
            'dth_vencto_padrao_fatura': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_vencto_real_fatura': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cd_interface_colab_rh': faker.random_int(),
            'cd_interface_loja_rh': faker.random_int(),
            'dat_indicador_venda': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_indicador_venda': faker.random_int(),
            'cod_tipo_operacao': faker.random_int(),
            'des_tipo_operacao': faker.word(),
            'id_conta': faker.random_int(),
            'dth_adesao_conta': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_sit_conta': faker.random_int(),
            'des_sit_conta': faker.word(),
            'dth_sit_conta': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'id_cartao': faker.random_int(),
            'id_produto_cartao': faker.random_int(),
            'nom_produto_cartao': faker.word(),
            'id_cliente_so': faker.random_int(),
            'id_fatura': faker.random_int(),
            'ind_titular': faker.random_int(),
            'cod_ger_geral_venda': faker.random_int(),
            'des_ger_geral_venda': faker.word(),
            'cod_estabelecimento': faker.random_int(),
            'nom_estabelecimento': faker.company(),
            'cod_regional': faker.random_int(),
            'des_regional': faker.word(),
            'cod_produto_financeiro': faker.random_int(),
            'des_produto_financeiro': faker.word(),
            'qtd_prev_indicador': faker.random_int(),
            'val_prev_indicador': faker.pyfloat(right_digits=2),
            'dth_real_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'val_real_indicador': faker.pyfloat(right_digits=2),
            'qtd_real_indicador': faker.random_int(),
            'des_canal': faker.word(),
            'qtd_parcelas': faker.random_int(),
            'num_chapa_vendedor': faker.random_int(),
            'nom_vendedor': faker.name(),
            'cod_cargo_vendedor': faker.random_int(),
            'des_cargo_vendedor': faker.job(),
            'flg_indicador': faker.word(),
            'dat_inc_registro': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_anomes_remuneracao': faker.date_time().strftime('%Y-%m-%d')
        }
        data['remuneracao_cartao'].append(criar_remuneracao_cartao)

        criar_remuneracao_emprestimo_fgts_inss = {
            'dat_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_indicador': faker.word(),
            'nm_indicador': faker.word(),
            'nm_indicador_frontend': faker.word(),
            'grp_indicador': faker.word(),
            'cd_interface_loja_rh': faker.random_int(),
            'cd_interface_colab_rh': faker.random_int(),
            'cod_indicador_referencia': faker.random_int(),
            'origem_venda': faker.word(),
            'id_contrato': faker.random_int(),
            'id_numero': faker.word(),
            'id_beneficio': faker.word(),
            'dat_cadastro': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dat_venda': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_cpf_cliente': faker.bothify(text='###########'),
            'nom_cliente': faker.name(),
            'cod_estabelecimento': faker.random_int(),
            'nom_estabelecimento': faker.company(),
            'nom_estabelecimento_so': faker.company(),
            'cod_regional': faker.random_int(),
            'des_regional': faker.word(),
            'cod_micro_regiao': faker.random_int(),
            'des_micro_regiao': faker.word(),
            'cod_produto_financeiro': faker.random_int(),
            'des_produto_financeiro': faker.word(),
            'des_status': faker.word(),
            'dat_ult_status': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'qtd_prev_venda': faker.random_int(),
            'val_prev_venda': faker.pyfloat(right_digits=2),
            'dth_real_venda': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'val_real_venda': faker.pyfloat(right_digits=2),
            'qtd_real_venda': faker.random_int(),
            'des_canal': faker.word(),
            'qtd_parcelas': faker.random_int(),
            'val_parcela': faker.pyfloat(right_digits=2),
            'val_troco': faker.pyfloat(right_digits=2),
            'num_chapa_vendedor': faker.random_int(),
            'nom_vendedor': faker.name(),
            'cod_cargo_vendedor': faker.random_int(),
            'des_cargo_vendedor': faker.job(),
            'flg_fun_ec_pefisa': faker.word(),
            'flg_indicador': faker.word(),
            'id_regra_indicador': faker.random_int(),
            'nm_regra_indicador': faker.word(),
            'obs_regra_indicador': faker.sentence(),
            'dat_inclusao_reg': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_anomes_indicador': faker.date_time().strftime('%Y-%m-%d')
        }
        data['remuneracao_emprestimo_fgts_inss'].append(criar_remuneracao_emprestimo_fgts_inss)

        criar_remuneracao_emprestimo_onidata = {
            'dat_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_indicador': faker.word(),
            'nm_indicador': faker.word(),
            'nm_indicador_frontend': faker.word(),
            'grp_indicador': faker.word(),
            'cd_interface_loja_rh': faker.random_int(),
            'cd_interface_colab_rh': faker.random_int(),
            'cod_indicador_referencia': faker.random_int(),
            'origem_venda': faker.word(),
            'id_contrato': faker.word(),
            'id_numero': faker.word(),
            'ip_assinatura': faker.ipv4(),
            'num_cpf_cliente': faker.bothify(text='###########'),
            'nom_cliente': faker.name(),
            'cod_estabelecimento': faker.random_int(),
            'nom_estabelecimento': faker.company(),
            'cod_regional': faker.random_int(),
            'des_regional': faker.word(),
            'cod_micro_regiao': faker.random_int(),
            'des_micro_regiao': faker.word(),
            'cod_produto_financeiro': faker.random_int(),
            'des_produto_financeiro': faker.word(),
            'cod_produto_indicador': faker.random_int(),
            'nm_produto_indicador': faker.word(),
            'cod_produto_so': faker.word(),
            'des_status': faker.word(),
            'dat_ult_status': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'qtd_prev_venda': faker.random_int(),
            'val_prev_venda': faker.pyfloat(right_digits=2),
            'dth_real_venda': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'val_real_venda': faker.pyfloat(right_digits=2),
            'qtd_real_venda': faker.random_int(),
            'des_canal': faker.word(),
            'qtd_parcelas': faker.random_int(),
            'val_parcela': faker.pyfloat(right_digits=2),
            'val_troco': faker.pyfloat(right_digits=2),
            'num_chapa_vendedor': faker.random_int(),
            'nom_vendedor': faker.name(),
            'cod_cargo_vendedor': faker.random_int(),
            'des_cargo_vendedor': faker.job(),
            'flg_fun_ec_pefisa': faker.word(),
            'flg_indicador': faker.word(),
            'id_regra_indicador': faker.random_int(),
            'nm_regra_indicador': faker.word(),
            'obs_regra_indicador': faker.sentence(),
            'dat_inclusao_reg': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_anomes_indicador': faker.date_time().strftime('%Y-%m-%d')
        }
        data['remuneracao_emprestimo_onidata'].append(criar_remuneracao_emprestimo_onidata)

        criar_remuneracao_fracionada_ssa = {
            'dat_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_indicador': faker.random_int(),
            'grp_indicador': faker.word(),
            'nm_empresa': faker.company(),
            'nm_indicador': faker.word(),
            'nm_indicador_frontend': faker.word(),
            'cod_indicador_venda': faker.random_int(),
            'cd_interface_loja_rh': faker.random_int(),
            'cd_interface_colab_rh': faker.random_int(),
            'cod_produto_valor_pfin': faker.random_int(),
            'numero_bilhete': faker.word(),
            'des_tip_origem': faker.word(),
            'id_cliente_so': faker.random_int(),
            'id_fatura': faker.word(),
            'ind_titular': faker.random_int(),
            'cod_ger_geral_venda': faker.random_int(),
            'des_ger_geral_venda': faker.word(),
            'cod_estabelecimento': faker.random_int(),
            'nom_estabelecimento': faker.company(),
            'cod_regional': faker.random_int(),
            'des_regional': faker.word(),
            'cod_produto_financeiro': faker.random_int(),
            'des_produto_financeiro': faker.word(),
            'id_produto_seguro_so': faker.random_int(),
            'cod_produto_seguro': faker.random_int(),
            'nm_produto_seguro': faker.word(),
            'id_agrupamento_produto': faker.random_int(),
            'nm_agrupamento_produto': faker.word(),
            'id_plano_seguro': faker.random_int(),
            'nm_plano_seguro': faker.word(),
            'flg_seguro_mensal': faker.word(),
            'id_seguradora': faker.random_int(),
            'nm_seguradora': faker.company(),
            'qtd_prev_indicador': faker.random_int(),
            'val_prev_indicador': faker.pyfloat(right_digits=2),
            'dth_real_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'val_real_indicador': faker.pyfloat(right_digits=2),
            'qtd_real_indicador': faker.random_int(),
            'des_canal': faker.word(),
            'num_chapa_vendedor': faker.random_int(),
            'nom_vendedor': faker.name(),
            'cod_cargo_vendedor': faker.random_int(),
            'des_cargo_vendedor': faker.job(),
            'id_adesao_seguro': faker.random_int(),
            'dth_adesao_seguro': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'id_parcela_seguro': faker.random_int(),
            'num_parcela': faker.random_int(),
            'vl_parcela': faker.pyfloat(right_digits=2),
            'tp_situacao': faker.random_int(),
            'des_tip_situacao': faker.word(),
            'dth_situacao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_vencimento': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_cancelamento': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_cancelamento_adesao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_postagem_parcela': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_liquidacao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'flg_fun_ec_pefisa': faker.word(),
            'flg_indicador': faker.word(),
            'id_regra_indicador': faker.random_int(),
            'nm_regra_indicador': faker.word(),
            'obs_regra_indicador': faker.sentence(),
            'dat_inclusao_reg': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_anomes_indicador': faker.date_time().strftime('%Y-%m-%d')
        }
        data['remuneracao_fracionada_ssa'].append(criar_remuneracao_fracionada_ssa)

        criar_remuneracao_pagto_adesao = {
            'dat_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_indicador': faker.random_int(),
            'grp_indicador': faker.word(),
            'nm_empresa': faker.company(),
            'nm_indicador': faker.word(),
            'nm_indicador_frontend': faker.word(),
            'cod_indicador_venda': faker.random_int(),
            'cd_interface_loja_rh': faker.random_int(),
            'cd_interface_colab_rh': faker.random_int(),
            'cod_produto_valor_pfin': faker.random_int(),
            'numero_bilhete': faker.word(),
            'des_tip_origem': faker.word(),
            'id_cliente_so': faker.random_int(),
            'id_fatura': faker.word(),
            'ind_titular': faker.random_int(),
            'cod_ger_geral_venda': faker.random_int(),
            'des_ger_geral_venda': faker.word(),
            'cod_estabelecimento': faker.random_int(),
            'nom_estabelecimento': faker.company(),
            'cod_regional': faker.random_int(),
            'des_regional': faker.word(),
            'cod_produto_financeiro': faker.random_int(),
            'des_produto_financeiro': faker.word(),
            'id_produto_seguro_so': faker.random_int(),
            'cod_produto_seguro': faker.random_int(),
            'nm_produto_seguro': faker.word(),
            'id_agrupamento_produto': faker.random_int(),
            'nm_agrupamento_produto': faker.word(),
            'id_plano_seguro': faker.random_int(),
            'nm_plano_seguro': faker.word(),
            'flg_seguro_mensal': faker.word(),
            'id_seguradora': faker.random_int(),
            'nm_seguradora': faker.company(),
            'qtd_prev_indicador': faker.random_int(),
            'val_prev_indicador': faker.pyfloat(right_digits=2),
            'dth_real_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'val_real_indicador': faker.pyfloat(right_digits=2),
            'qtd_real_indicador': faker.random_int(),
            'des_canal': faker.word(),
            'num_chapa_vendedor': faker.random_int(),
            'nom_vendedor': faker.name(),
            'cod_cargo_vendedor': faker.random_int(),
            'des_cargo_vendedor': faker.job(),
            'id_adesao_seguro': faker.random_int(),
            'dth_adesao_seguro': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'id_parcela_seguro': faker.random_int(),
            'num_parcela': faker.random_int(),
            'vl_parcela': faker.pyfloat(right_digits=2),
            'tp_situacao': faker.random_int(),
            'des_tip_situacao': faker.word(),
            'dth_situacao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_vencimento': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_cancelamento': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_cancelamento_adesao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_postagem_parcela': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_liquidacao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'flg_fun_ec_pefisa': faker.word(),
            'flg_indicador': faker.word(),
            'id_regra_indicador': faker.random_int(),
            'nm_regra_indicador': faker.word(),
            'obs_regra_indicador': faker.sentence(),
            'dat_inclusao_reg': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_anomes_indicador': faker.date_time().strftime('%Y-%m-%d')
        }
        data['remuneracao_pagto_adesao'].append(criar_remuneracao_pagto_adesao)

        criar_remuneracao_pagto_grf = {
            'dat_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_indicador': faker.random_int(),
            'grp_indicador': faker.word(),
            'nm_empresa': faker.company(),
            'nm_indicador': faker.word(),
            'nm_indicador_frontend': faker.word(),
            'cod_indicador_venda': faker.random_int(),
            'cd_interface_loja_rh': faker.random_int(),
            'cd_interface_colab_rh': faker.random_int(),
            'cod_produto_valor_pfin': faker.random_int(),
            'numero_bilhete': faker.word(),
            'des_tip_origem': faker.word(),
            'id_cliente_so': faker.random_int(),
            'id_fatura': faker.word(),
            'ind_titular': faker.random_int(),
            'cod_ger_geral_venda': faker.random_int(),
            'des_ger_geral_venda': faker.word(),
            'cod_estabelecimento': faker.random_int(),
            'nom_estabelecimento': faker.company(),
            'cod_regional': faker.random_int(),
            'des_regional': faker.word(),
            'cod_produto_financeiro': faker.random_int(),
            'des_produto_financeiro': faker.word(),
            'id_produto_seguro_so': faker.random_int(),
            'cod_produto_seguro': faker.random_int(),
            'nm_produto_seguro': faker.word(),
            'id_agrupamento_produto': faker.random_int(),
            'nm_agrupamento_produto': faker.word(),
            'id_plano_seguro': faker.random_int(),
            'nm_plano_seguro': faker.word(),
            'flg_seguro_mensal': faker.word(),
            'id_seguradora': faker.random_int(),
            'nm_seguradora': faker.company(),
            'qtd_prev_indicador': faker.random_int(),
            'val_prev_indicador': faker.pyfloat(right_digits=2),
            'dth_real_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'val_real_indicador': faker.pyfloat(right_digits=2),
            'qtd_real_indicador': faker.random_int(),
            'des_canal': faker.word(),
            'num_chapa_vendedor': faker.random_int(),
            'nom_vendedor': faker.name(),
            'cod_cargo_vendedor': faker.random_int(),
            'des_cargo_vendedor': faker.job(),
            'id_adesao_seguro': faker.random_int(),
            'dth_adesao_seguro': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'id_parcela_seguro': faker.random_int(),
            'num_parcela': faker.random_int(),
            'vl_parcela': faker.pyfloat(right_digits=2),
            'tp_situacao': faker.random_int(),
            'des_tip_situacao': faker.word(),
            'dth_situacao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_vencimento': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_cancelamento': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_cancelamento_adesao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_postagem_parcela': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_liquidacao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'flg_fun_ec_pefisa': faker.word(),
            'flg_indicador': faker.word(),
            'id_regra_indicador': faker.random_int(),
            'nm_regra_indicador': faker.word(),
            'obs_regra_indicador': faker.sentence(),
            'dat_inclusao_reg': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_anomes_indicador': faker.date_time().strftime('%Y-%m-%d')
        }
        data['remuneracao_pagto_grf'].append(criar_remuneracao_pagto_grf)

        criar_remuneracao_participacao_loja = {
            'dat_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_indicador': faker.random_int(),
            'grp_indicador': faker.word(),
            'nm_empresa': faker.company(),
            'nm_indicador': faker.word(),
            'nm_indicador_frontend': faker.word(),
            'cod_indicador_venda': faker.random_int(),
            'cd_interface_loja_rh': faker.random_int(),
            'cd_interface_colab_rh': faker.random_int(),
            'cod_estabelecimento': faker.random_int(),
            'nom_estabelecimento': faker.company(),
            'cod_regional': faker.random_int(),
            'des_regional': faker.word(),
            'cod_micro_regiao': faker.random_int(),
            'des_micro_regiao': faker.word(),
            'cod_produto_financeiro': faker.random_int(),
            'nm_produto_financeiro': faker.word(),
            'valor_pnb': faker.pyfloat(right_digits=2),
            'valor_ramo': faker.pyfloat(right_digits=2),
            'qtd_prev_indicador': faker.pyfloat(right_digits=2),
            'qtd_real_indicador': faker.pyfloat(right_digits=2),
            'dat_venda_ref': faker.random_int(),
            'dat_inclusao_reg': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_anomes_indicador': faker.date_time().strftime('%Y-%m-%d')
        }
        data['remuneracao_participacao_loja'].append(criar_remuneracao_participacao_loja)

        record = {
            'dat_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_indicador': faker.random_int(),
            'grp_indicador': faker.word(),
            'nm_empresa': faker.company(),
            'nm_indicador': faker.word(),
            'nm_indicador_frontend': faker.word(),
            'cod_indicador_venda': faker.random_int(),
            'cd_interface_loja_rh': faker.random_int(),
            'cd_interface_colab_rh': faker.random_int(),
            'cod_produto_valor_pfin': faker.random_int(),
            'numero_bilhete': faker.bothify(text='?########'),
            'des_tip_origem': faker.word(),
            'id_cliente_so': faker.random_int(),
            'id_fatura': faker.uuid4(),
            'ind_titular': faker.random_int(),
            'cod_ger_geral_venda': faker.random_int(),
            'des_ger_geral_venda': faker.word(),
            'cod_estabelecimento': faker.random_int(),
            'nom_estabelecimento': faker.company(),
            'cod_regional': faker.random_int(),
            'des_regional': faker.word(),
            'cod_produto_financeiro': faker.random_int(),
            'des_produto_financeiro': faker.word(),
            'id_produto_seguro_so': faker.random_int(),
            'cod_produto_seguro': faker.random_int(),
            'nm_produto_seguro': faker.word(),
            'id_agrupamento_produto': faker.random_int(),
            'nm_agrupamento_produto': faker.word(),
            'id_plano_seguro': faker.random_int(),
            'nm_plano_seguro': faker.word(),
            'flg_seguro_mensal': faker.random_element(elements=('S', 'N')),
            'id_seguradora': faker.random_int(),
            'nm_seguradora': faker.company(),
            'qtd_prev_indicador': faker.random_int(),
            'val_prev_indicador': faker.pyfloat(right_digits=2),
            'dth_real_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'val_real_indicador': faker.pyfloat(right_digits=2),
            'qtd_real_indicador': faker.random_int(),
            'des_canal': faker.word(),
            'num_chapa_vendedor': faker.random_int(),
            'nom_vendedor': faker.name(),
            'cod_cargo_vendedor': faker.random_int(),
            'des_cargo_vendedor': faker.job(),
            'id_adesao_seguro': faker.random_int(),
            'dth_adesao_seguro': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'id_parcela_seguro': faker.random_int(),
            'num_parcela': faker.random_int(),
            'vl_parcela': faker.pyfloat(right_digits=2),
            'tp_situacao': faker.random_int(),
            'des_tip_situacao': faker.word(),
            'dth_situacao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_vencimento': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_cancelamento': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_cancelamento_adesao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_postagem_parcela': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_liquidacao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'flg_fun_ec_pefisa': faker.random_element(elements=('S', 'N')),
            'flg_indicador': faker.random_element(elements=('S', 'N')),
            'id_regra_indicador': faker.random_int(),
            'nm_regra_indicador': faker.word(),
            'obs_regra_indicador': faker.sentence(),
            'dat_inclusao_reg': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_anomes_indicador': faker.date_time().strftime('%Y-%m-%d')
        }
        data['remuneracao_prim_pagto_ssa'].append(record)

        record = {
            'dat_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_indicador': faker.random_int(),
            'grp_indicador': faker.word(),
            'nm_empresa': faker.company(),
            'nm_indicador': faker.word(),
            'nm_indicador_frontend': faker.word(),
            'cod_indicador_venda': faker.random_int(),
            'cd_interface_loja_rh': faker.random_int(),
            'cd_interface_colab_rh': faker.random_int(),
            'cod_produto_valor_pfin': faker.random_int(),
            'numero_bilhete': faker.bothify(text='?########'),
            'des_tip_origem': faker.word(),
            'id_cliente_so': faker.random_int(),
            'id_fatura': faker.uuid4(),
            'ind_titular': faker.random_int(),
            'cod_ger_geral_venda': faker.random_int(),
            'des_ger_geral_venda': faker.word(),
            'cod_estabelecimento': faker.random_int(),
            'nom_estabelecimento': faker.company(),
            'cod_regional': faker.random_int(),
            'des_regional': faker.word(),
            'cod_produto_financeiro': faker.random_int(),
            'des_produto_financeiro': faker.word(),
            'id_produto_seguro_so': faker.random_int(),
            'cod_produto_seguro': faker.random_int(),
            'nm_produto_seguro': faker.word(),
            'id_agrupamento_produto': faker.random_int(),
            'nm_agrupamento_produto': faker.word(),
            'id_plano_seguro': faker.random_int(),
            'nm_plano_seguro': faker.word(),
            'flg_seguro_mensal': faker.random_element(elements=('S', 'N')),
            'id_seguradora': faker.random_int(),
            'nm_seguradora': faker.company(),
            'qtd_prev_indicador': faker.random_int(),
            'val_prev_indicador': faker.pyfloat(right_digits=2),
            'dth_real_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'val_real_indicador': faker.pyfloat(right_digits=2),
            'qtd_real_indicador': faker.random_int(),
            'des_canal': faker.word(),
            'num_chapa_vendedor': faker.random_int(),
            'nom_vendedor': faker.name(),
            'cod_cargo_vendedor': faker.random_int(),
            'des_cargo_vendedor': faker.job(),
            'id_adesao_seguro': faker.random_int(),
            'dth_adesao_seguro': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'id_parcela_seguro': faker.random_int(),
            'num_parcela': faker.random_int(),
            'vl_parcela': faker.pyfloat(right_digits=2),
            'tp_situacao': faker.random_int(),
            'des_tip_situacao': faker.word(),
            'dth_situacao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_vencimento': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_cancelamento': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_cancelamento_adesao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_postagem_parcela': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_liquidacao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'flg_fun_ec_pefisa': faker.random_element(elements=('S', 'N')),
            'flg_indicador': faker.random_element(elements=('S', 'N')),
            'id_regra_indicador': faker.random_int(),
            'nm_regra_indicador': faker.word(),
            'obs_regra_indicador': faker.sentence(),
            'dat_inclusao_reg': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_anomes_indicador': faker.date_time().strftime('%Y-%m-%d')
        }
        data['remuneracao_seguro_ssa'].append(record)

        record = {
            'dat_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_indicador': faker.bothify(text='?####'),
            'nm_indicador': faker.word(),
            'nm_indicador_frontend': faker.word(),
            'grp_indicador': faker.word(),
            'cd_interface_loja_rh': faker.random_int(),
            'cd_interface_colab_rh': faker.random_int(),
            'cod_indicador_referencia': faker.random_int(),
            'id_cliente_so': faker.random_int(),
            'num_cpf_cliente': faker.bothify(text='###########'),
            'nom_cliente': faker.name(),
            'ind_titular': faker.random_int(),
            'id_evento_transacao': faker.uuid4(),
            'id_conta': faker.random_int(),
            'dth_adesao_conta': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_sit_conta': faker.random_int(),
            'des_sit_conta': faker.word(),
            'dth_sit_conta': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'id_cartao': faker.random_int(),
            'id_produto_cartao': faker.random_int(),
            'nom_produto_cartao': faker.word(),
            'dat_emissao_cartao': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_estabelecimento': faker.random_int(),
            'nom_estabelecimento': faker.company(),
            'cod_regional': faker.random_int(),
            'des_regional': faker.word(),
            'cod_micro_regiao': faker.random_int(),
            'des_micro_regiao': faker.word(),
            'cod_produto_financeiro': faker.random_int(),
            'des_produto_financeiro': faker.word(),
            'qtd_prev_venda': faker.random_int(),
            'val_prev_venda': faker.pyfloat(right_digits=2),
            'dth_real_venda': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'val_real_venda': faker.pyfloat(right_digits=2),
            'qtd_real_venda': faker.random_int(),
            'des_canal': faker.word(),
            'qtd_parcelas': faker.random_int(),
            'num_chapa_vendedor': faker.random_int(),
            'nom_vendedor': faker.name(),
            'cod_cargo_vendedor': faker.random_int(),
            'des_cargo_vendedor': faker.job(),
            'dat_inclusao_reg': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_anomes_indicador': faker.date_time().strftime('%Y-%m-%d')
        }
        data['remuneracao_tag'].append(record)

        record = {
            'dat_indicador': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'grp_indicador': faker.word(),
            'nm_empresa': faker.company(),
            'cod_indicador': faker.random_int(),
            'nm_indicador': faker.word(),
            'nm_indicador_frontend': faker.word(),
            'des_tip_origem': faker.word(),
            'cod_produto_financeiro': faker.random_int(),
            'nm_produto_financeiro': faker.word(),
            'id_produto_seguro_so': faker.random_int(),
            'cod_produto_seguro': faker.random_int(),
            'nm_produto_seguro': faker.word(),
            'id_agrupamento_produto': faker.random_int(),
            'nm_agrupamento_produto': faker.word(),
            'id_plano_seguro': faker.random_int(),
            'nm_plano_seguro': faker.word(),
            'flg_seguro_mensal': faker.random_element(elements=('S', 'N')),
            'id_seguradora': faker.random_int(),
            'nm_seguradora': faker.company(),
            'nro_cnpj_seguradora': faker.bothify(text='########'),
            'cod_ger_geral_venda': faker.random_int(),
            'des_ger_geral_venda': faker.word(),
            'cod_estabelecimento': faker.random_int(),
            'nom_estabelecimento': faker.company(),
            'cod_regional': faker.random_int(),
            'des_regional': faker.word(),
            'cod_micro_regiao': faker.random_int(),
            'des_micro_regiao': faker.word(),
            'cod_canal_venda_so': faker.random_int(),
            'nm_canal_venda_so': faker.word(),
            'tp_canalvenda': faker.random_int(),
            'des_tip_canal_venda': faker.word(),
            'id_adesao_seguro': faker.random_int(),
            'id_conta': faker.random_int(),
            'id_cliente_so': faker.random_int(),
            'id_pessoa_so': faker.random_int(),
            'nm_cliente_so': faker.name(),
            'nro_cpf_cliente_so': faker.bothify(text='###########'),
            'id_adesao_seguro_item': faker.random_int(),
            'id_pessoa_item': faker.random_int(),
            'nm_cliente_item': faker.name(),
            'nro_cpf_pessoa_item': faker.bothify(text='###########'),
            'cod_tip_titularidade': faker.random_int(),
            'des_tip_titularidade': faker.word(),
            'qtd_prev_indicador': faker.random_int(),
            'val_prev_indicador': faker.pyfloat(right_digits=2),
            'qtd_real_indicador': faker.random_int(),
            'val_real_indicador': faker.pyfloat(right_digits=2),
            'dth_adesao_seguro': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'vl_prolabore': faker.pyfloat(right_digits=2),
            'nro_parcelas': faker.random_int(),
            'vl_premio_total': faker.pyfloat(right_digits=2),
            'vl_premio_liquido': faker.pyfloat(right_digits=2),
            'vl_faixa_preco_inicial': faker.pyfloat(right_digits=2),
            'vl_faixa_preco_final': faker.pyfloat(right_digits=2),
            'tp_situacao_seguro': faker.random_int(),
            'des_tip_situacao_seguro': faker.word(),
            'dth_situacao_seguro': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'cod_tip_cancelamento': faker.random_int(),
            'des_tip_cancelamento': faker.word(),
            'cod_motivo_cancel': faker.random_int(),
            'des_motivo_cancel': faker.word(),
            'dth_cancelamento': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_adesao_seguro_item': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'dth_cancel_seguro_item': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_chapa_vendedor': faker.random_int(),
            'nom_vendedor': faker.name(),
            'cod_cargo_vendedor': faker.random_int(),
            'des_cargo_vendedor': faker.job(),
            'cod_estab_vendedor': faker.random_int(),
            'flg_fun_ec_pefisa': faker.random_element(elements=('S', 'N')),
            'flg_indicador': faker.random_element(elements=('S', 'N')),
            'id_regra_indicador': faker.random_int(),
            'nm_regra_indicador': faker.word(),
            'obs_regra_indicador': faker.sentence(),
            'dat_inclusao_reg': faker.date_time().strftime('%Y-%m-%d %H:%M:%S'),
            'num_anomes_indicador': faker.date_time().strftime('%Y-%m-%d')
        }
        data['seguro_venda_credit'].append(record)

    jsonl_data(data=data)
    return data

num_records = input_num_linhas()
function_pfs_pfin_termometro(num_records)
