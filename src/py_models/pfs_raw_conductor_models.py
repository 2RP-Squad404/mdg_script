from pydantic import BaseModel
from datetime import date, datetime


# Dataset: pfs_raw_conductor, Table: adesao_debito_automatico
class Adesao_debito_automatico(BaseModel):
    hash_key: str
    source: str
    id: int
    dataadesao: datetime
    id_contadigital: int
    id_contacredito: int
    id_tipodebitoautomatico: int
    descricaotipodebitoautomatico: str
    responsavel: str
    datacancelamento: datetime
    responsavelcancelamento: str
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    production_date: date




# Dataset: pfs_raw_conductor, Table: adesao_pacote_tarifa
class Adesao_pacote_tarifa(BaseModel):
    hash_key: str
    source: str
    ac_id_conta: int
    pt_id_pacotetarifa: int
    pt_descricaopacotetarifa: str
    ac_valortarifa: float
    ac_dataativacao: datetime
    ac_datadesativacao: datetime
    ac_datafimciclo: datetime
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    production_date: date




# Dataset: pfs_raw_conductor, Table: autorizacao
class Autorizacao(BaseModel):
    hash_key: str
    source: str
    me_id_mensagem: int
    me_datahora: datetime
    me_tipotransacao: str
    me_ip_servico: str
    me_ip_atf: str
    me_codigoprocessamento: str
    me_codigoprocessamentosecundario: str
    me_numeroestabelecimento: int
    me_dvnumeroestabelecimento: str
    me_nsuorigem: int
    me_id_tipoterminal: int
    me_terminal: str
    me_versao: str
    me_cartao: str
    me_valor: float
    me_parcelas: int
    me_datavalidade: str
    me_codigodesbloqueio: str
    me_codigodebarras: str
    me_codigoinstituicao: str
    me_dadostransacaooriginal: str
    me_dadosultimatransacao: str
    me_tipoaberturafechamento: str
    me_datahoralocal: str
    me_datalocal: str
    me_horalocal: str
    me_modoentrada: str
    me_nsuhostcancelar: int
    me_codigorespostaterminal: str
    me_tipoterminal: str
    me_trilhacartao: str
    me_chavesessao: str
    me_id_fornecedor: str
    me_id_modelo: str
    me_serieperiferico: str
    me_versaoperiferico: str
    me_cupom: str
    me_mcc: int
    me_codcondicaopos: str
    me_numerorefenciarecebimento: str
    me_codigoservico: int
    me_nomeestabelecimento: str
    me_trilha01: str
    me_codigomoeda: int
    me_infoadicionalpos: int
    me_valordispensado: float
    me_identificacaotransacao: str
    me_valorsubtituicao: float
    me_configentrada: str
    me_cvvresultcode: int
    me_cvv2resultcode: str
    me_codigoautorizacao: str
    me_codigoresposta: str
    me_codigomoedadestino: str
    me_valordestino: float
    me_id_cartao: int
    me_id_capacidadedevice: str
    me_lifecicleauthorization: int
    me_id_tipoestabelecimentopreautorizacao: str
    me_codigopostal: str
    me_codigopais: str
    me_id_nivelseguranca: str
    me_dadosadicionais: str
    me_numeroestabelecimento_externo: int
    me_id_emissorredecompartilhada: int
    me_standinreasoncode: int
    me_codigooperador: str
    me_flagtransacaocomsenha: bool
    me_dadosparcelamentovendaemissor: str
    me_flagtransacaocomcvv1: bool
    me_flagtransacaocomcvv2: bool
    me_flagtransacaocomcvv3: bool
    me_flagtransacaotokenizada: bool
    tt_id_tipoterminal: int
    tt_descricaoterminal: str
    tt_origem: str
    tt_flagcancelamentonsubit90: bool
    tt_flagresolveultimatransacao: bool
    tt_flagcontroleabertura: bool
    tt_flagsonda: bool
    tt_codpinblock: int
    tt_tipochave: str
    tt_aceitatransacaochip: bool
    cp_codigoprocessamento: str
    cp_transacao: str
    cp_descricao: str
    cp_tipobuscadadosoperacao: int
    cp_flaggravafraude: bool
    ms_id_mensagem: int
    ms_datahora: datetime
    ms_codigoautorizacao: str
    ms_informacoesadicionais: str
    ms_nomeportador: str
    ms_nsuhost: int
    ms_codigoresposta: str
    ms_datacorrespondente: str
    ms_dadoshost: str
    ms_id_emissor: int
    ms_codigodescricao: int
    ms_flagvalidousenha: bool
    ms_flagvalidoucvv1: bool
    ms_flagvalidoucvv2: bool
    ms_flagvalidoucvv3: bool
    ms_flagvalidoucriptograma: bool
    ms_dadosadicionais: str
    dtn_codigodescricao: int
    dtn_descricaoaplicativo: str
    dtn_flagenvioterminal: bool
    dtn_descricaoterminal: str
    ra_codigoresposta: str
    ra_descricao: str
    aut_id_autorizacao: int
    aut_codigoautorizacao: str
    aut_nsuorigem: int
    aut_cartao: str
    aut_numeroestabelecimento: float
    aut_dataautorizacao: datetime
    aut_origem: str
    aut_valor: float
    aut_id_operacao: int
    aut_numeroparcelas: int
    aut_terminal: str
    aut_status: int
    aut_id_emissor: int
    aut_flagparticipapromocao: bool
    aut_referencenumber: str
    aut_identificacaotransacao: int
    aut_modoentrada: str
    aut_codcondicaopos: str
    aut_id_capacidadedevice: str
    aut_id_tipoestabelecimentopreautorizacao: str
    aut_id_cartao: int
    aut_datalocal: str
    aut_horalocal: str
    aut_flagtransacaocomsenha: bool
    aut_flagautorizadostandin: bool
    aut_motivoautorizadostandin: str
    aut_id_mensagementrada: int
    aut_estabelecimentoautenticado: bool
    aut_flagaprovacaoparcial: bool
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    me_transactionuuid: str
    ra_codigodescricaoodin: int
    ra_descricaoodim: str
    production_date: date
    me_flagtransacao3ds: bool
    me_origemautenticacao3ds: str
    ra_aplicacao: str
    me_flagpreautorizacao: bool
    aut_taxaptax: float
    aut_taxacartao: float
    aut_taxaiofinternacional: float




# Dataset: pfs_raw_conductor, Table: autorizacoes_detalhes
class Autorizacoes_detalhes(BaseModel):
    hash_key: str
    source: str
    id: int
    uuid: str
    jarvis_score: int
    fraude_score: int
    fraude_rule_score: int
    fraude_reason_code: int
    fraude_reason_code2: int
    fraude_reason_code3: int
    cidade: str
    pais: str
    cep: str
    token: str
    id_token: int
    data_autorizacao: str
    indicador_comercio_eletronico: str
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    production_date: date




# Dataset: pfs_raw_conductor, Table: boleto_emitido
class Boleto_emitido(BaseModel):
    hash_key: str
    source: str
    be_id_boleto: int
    be_id_tipoboleto: int
    tb_descricaotipoboleto: str
    be_id_conta: int
    be_dataemissao: datetime
    be_statusboleto: str
    be_situacaoboleto: str
    be_valorboleto: float
    be_datavencimento: datetime
    be_nossonumero: float
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    production_date: date




# Dataset: pfs_raw_conductor, Table: cliente
class Cliente(BaseModel):
    hash_key: str
    source: str
    pf_id_pessoafisica: int
    pf_id_emissor: int
    pf_nome: str
    pf_cpf: str
    pf_datanascimento: str
    pf_sexo: str
    pf_numeroidentidade: str
    pf_orgaoidentidade: str
    pf_estadoidentidade: str
    pf_dataemissaoidentidade: str
    pf_cic: str
    pf_statuscic: int
    pf_flagalteracaocic: int
    pf_flagdeficientevisual: bool
    pf_tipopessoa: int
    pf_statuspf: int
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    production_date: date




# Dataset: pfs_raw_conductor, Table: cliente_complemento
class Cliente_complemento(BaseModel):
    hash_key: str
    source: str
    pfc_id_pessoafisica: int
    pfc_id_emissor: int
    pfc_nomemae: str
    pfc_nomepai: str
    pfc_estadocivil: int
    pfc_numerodependentes: int
    pfc_naturalidadecidade: str
    pfc_naturalidadeestado: str
    pfc_nacionalidade: int
    pfc_empresa: str
    pfc_ramo: str
    pfc_tempotrabalhoanos: int
    pfc_tempotrabalhomeses: int
    pfc_tempocompraloja: str
    pfc_distanciaresidencialoja: int
    pfc_profissao: str
    pfc_salario: float
    pfc_outrasrendas: float
    pfc_origemoutrasrendas: str
    pfc_cgc: str
    pfc_empresaanterior: str
    pfc_imovel1: str
    pfc_cidade1: str
    pfc_estado1: str
    pfc_valorimovel1: float
    pfc_imovel2: str
    pfc_cidade2: str
    pfc_estado2: str
    pfc_valorimovel2: float
    pfc_imovel3: str
    pfc_cidade3: str
    pfc_estado3: str
    pfc_valorimovel3: float
    pfc_marcaveiculo1: str
    pfc_modeloveiculo1: str
    pfc_anoveiculo1: int
    pfc_valorveiculo1: float
    pfc_marcaveiculo2: str
    pfc_modeloveiculo2: str
    pfc_anoveiculo2: int
    pfc_valorveiculo2: float
    pfc_patrimoniototal: float
    pfc_credordivida: str
    pfc_tipodivida: int
    pfc_valordivida: float
    pfc_banco: int
    pfc_agencia: int
    pfc_contacorrente: str
    pfc_cidade: str
    pfc_estado: str
    pfc_segurovida: bool
    pfc_seguroauto: bool
    pfc_seguroimovel: bool
    pfc_americanexpress: bool
    pfc_diners: bool
    pfc_visa: bool
    pfc_mastercard: bool
    pfc_cartao5: bool
    pfc_cartao6: bool
    pfc_cartao7: bool
    pfc_cartao8: bool
    pfc_cartao9: bool
    pfc_outros: bool
    pfc_outrocartao: str
    pfc_validadecartao: str
    pfc_numerocartao: str
    pfc_grauinstrucao: int
    pfc_dataadmissao: str
    pfc_nomeagencia: str
    pfc_chequeespecial: int
    pfc_telefonebanco: str
    pfc_nomeconjuge: str
    pfc_cpfconjuge: str
    pfc_grauinstrucaoconjuge: int
    pfc_datanascimentoconjuge: str
    pfc_numeroidentidadeconjuge: str
    pfc_empresaconjuge: str
    pfc_profissaoconjuge: str
    pfc_salarioconjuge: float
    pfc_nomereferencia1: str
    pfc_enderecoreferencia1: str
    pfc_nomereferencia2: str
    pfc_enderecoreferencia2: str
    pfc_naturezaocupacao: int
    pfc_email: str
    pfc_veiculofinanciadoquitado: int
    pfc_tempocontaanos: int
    pfc_tempocontameses: int
    pfc_filhosmenores14anos: int
    pfc_dataadmissaoconjuge: str
    pfc_datacompraloja: str
    pfc_dacpf: bool
    pfc_darg: bool
    pfc_dacomprovanteresidencial: bool
    pfc_dacomprovanterenda: bool
    pfc_darendaconjuge: bool
    pfc_daoutrasrendas: bool
    pfc_dddcelular: str
    pfc_telefonecelular: str
    pfc_margemconsignacao: float
    pfc_matricula1: str
    pfc_matricula2: str
    pfc_ufemissaoidentidade: str
    pfc_numerocnh: str
    pfc_validadecnh: str
    pfc_numerosegurancacnh: str
    pfc_codigovalidacaocnh: str
    pfc_dataemissaocnh: str
    pfc_numerocarteiratrabalho: str
    pfc_seriecarteiratrabalho: str
    pfc_ufcarteiratrabalho: str
    pfc_dataemissaocarteiratrabalho: str
    pfc_identidadeprofissional: str
    pfc_tipoidentidadeprofissional: str
    pfc_dataemissaoidentidadeprofissional: str
    pfc_referenciapessoal3: str
    pfc_visamasternacional: bool
    pfc_visamasterinternacional: bool
    pfc_visamastergold: bool
    pfc_visamasterplatinum: bool
    pfc_visamasterblack: bool
    pfc_visamasterinfinity: bool
    pfc_americanecredit: bool
    pfc_americaneblue: bool
    pfc_americanebusiness: bool
    pfc_americanegold: bool
    pfc_americaneplatinum: bool
    pfc_americaneback: bool
    pfc_centuriongreen: bool
    pfc_centuriongold: bool
    pfc_centurionplatinum: bool
    pfc_outrosprivatelabel: bool
    pfc_outrosdinnersclub: bool
    pfc_vipbbestilo: bool
    pfc_vipbradescoprime: bool
    pfc_viphsbcpremier: bool
    pfc_vipitaupersonalite: bool
    pfc_vipsantandervangogh: bool
    pfc_observacaolojista: str
    pfc_parentescopessoal1: int
    pfc_parentescopessoal2: int
    pfc_parentescopessoal3: int
    pfc_masternacional: bool
    pfc_masterinternacional: bool
    pfc_mastergold: bool
    pfc_masterplatinum: bool
    pfc_masterblack: bool
    pfc_masterinfinity: bool
    pfc_numbeneficioinss: str
    pfc_representantelegal: str
    pfc_enderecoreferencia3: str
    pfc_id_tipodocumento: int
    pfc_faturamentoanual: float
    pfc_nomefantasia: str
    pfc_ramoatividade: int
    pfc_dataconstituicaoemp: str
    pfc_carteiranacionalsaude: str
    pfc_flagenviarcorrespondenciaemail: bool
    pfc_inscricaoestadual: str
    pfc_emailsecundario: str
    pfc_inscricaomunicipal: str
    pfc_nomeresponsavelcad: str
    pfc_cpfresponsavelcad: str
    pfc_dtnascimentoresponsavelcad: str
    pfc_dddresponsavelcad: str
    pfc_telefoneresponsavelcad: str
    pfc_dddcelresponsavelcad: str
    pfc_celularresponsavelcad: str
    pfc_emailresponsavelcad: str
    pfc_nomecontatoempresa: str
    pfc_dddtelefonecontatoempresa: str
    pfc_telefonecontatoempresa: str
    pfc_dddcelularcontatoempresa: str
    pfc_celularcontatoempresa: str
    pfc_emailcontatoempresa: str
    pfc_bancoref1: int
    pfc_agenciaref1: int
    pfc_ccorrenteref1: str
    pfc_gerenteref1: str
    pfc_dddref1: str
    pfc_telefoneref1: str
    pfc_razaosocialrefcomercial1: str
    pfc_nomecontratorefcomercial1: str
    pfc_dddrefcomercial1: str
    pfc_telefonerefcomercial1: str
    pfc_emailrefcomercial1: str
    pfc_bancoref2: int
    pfc_agenciaref2: int
    pfc_ccorrenteref2: str
    pfc_gerenteref2: str
    pfc_dddref2: str
    pfc_telefoneref2: str
    pfc_razaosocialrefcomercial2: str
    pfc_nomecontratorefcomercial2: str
    pfc_dddrefcomercial2: str
    pfc_telefonerefcomercial2: str
    pfc_emailrefcomercial2: str
    pfc_insencaoinscricaoestadual: bool
    pfc_codigoprofissao: int
    pfc_codigocargo: int
    pfc_impedidodefinanciamento: bool
    pfc_pessoapoliticamenteexposta: bool
    pfc_cnae: str
    pfc_formaconstituicao: str
    pfc_flagnomepainaoinformado: bool
    pfc_flagsemenderecocomercialfixo: bool
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    production_date: date




# Dataset: pfs_raw_conductor, Table: compras_contestadas
class Compras_contestadas(BaseModel):
    hash_key: str
    source: str
    cc_id_compracontestada: int
    cc_id_eventocompra: int
    cc_id_conta: int
    cc_id_operacao: int
    cc_datacontestacao: datetime
    cc_parcelapedida: int
    cc_quantidadeparcelas: int
    cc_status: str
    cc_id_statuscontestacao: int
    scc_statuscontestacao: str
    cc_historico: str
    cc_dataalteracao: datetime
    cc_responsavel: str
    cc_id_tiporesolucaocontestacao: int
    trc_tiporesolucaocontestacao: str
    cc_id_arquivo: int
    cc_valorparcial: float
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    production_date: date
    razaocb: str
    motivo2reapresentacao: str
    status: int
    id_safe: int
    audit_control_number: str
    dataenviocb: datetime
    data2reapresentacao: datetime




# Dataset: pfs_raw_conductor, Table: conta
class Conta(BaseModel):
    hash_key: str
    source: str
    ct_id_conta: int
    ct_id_emissor: int
    ct_id_filial: int
    ct_id_produto: int
    ct_bin: int
    ct_conta: int
    ct_tipopessoa: int
    ct_id_pessoa: int
    ct_quantidadevencimentos: int
    ct_vencimento1: int
    ct_vencimento2: int
    ct_vencimento3: int
    ct_proximovencimentoreal: datetime
    ct_proximovencimentopadrao: str
    ct_datacadastramento: datetime
    ct_aniversarioanuidade1: int
    ct_aniversarioanuidade2: int
    ct_quantidadeportadores: int
    ct_id_caracteristicaanuidade: int
    ct_status: int
    ct_flagutilizacao: bool
    ct_id_origemcomercial: int
    ct_flagdescontoparticular: bool
    ct_statusextrato: bool
    ct_posicaocobranca: int
    ct_correspondencia: int
    ct_statusdata: datetime
    ct_datavencimentocobranca: datetime
    ct_dataultimopagamento: datetime
    ct_dataultimopagamentoatraso: datetime
    ct_datapagamentomaioratraso: datetime
    ct_tamanhoultimoatraso: int
    ct_tamanhomaioratraso: int
    ct_atrasototal: int
    ct_quantidadepagamentos: int
    ct_quantidadeatrasos: int
    ct_datapgtoinformado: datetime
    ct_banco: int
    ct_agencia: int
    ct_datavisitaagendada: datetime
    ct_datapgtoprometido: datetime
    ct_finalconta: int
    ct_assessoriastatus: int
    ct_assessoriaatual: int
    ct_rendacomprovada: float
    ct_numeroacc: float
    ct_flagrescaldo: int
    ct_obscli: str
    ct_id_acaocobranca: int
    ct_dataagendamento: datetime
    ct_horaagendamento: str
    ct_datavalidadeacao: datetime
    ct_flagnegativado: int
    ct_dataenviocartafollow: datetime
    ct_dataultimoenvio: datetime
    ct_dataprimeiroenvio: datetime
    ct_flagacaoadm: int
    ct_id_acordo: int
    ct_datavencimentoativacao: datetime
    ct_dataultimaativacao: datetime
    ct_dataultimaalteracaovencto: datetime
    ct_dataultimoatraso: datetime
    ct_id_proposta: int
    ct_datasaidaassessoria: datetime
    ct_id_acionamento: int
    ct_id_containdicacao: int
    ct_behaviorscore: int
    ct_possuioverlimit: bool
    ct_id_telefonesms: int
    ct_id_contamigracao: int
    ct_numerofidelidade: str
    ct_id_tipocliente: int
    ct_anoquitacao: int
    ct_proximovencpadrao: datetime
    ct_funcaoativa: int
    ct_idconta_emissor: int
    sct_status: int
    sct_descricao: str
    sct_flagnegativsaldo: bool
    sct_flagalteradatacobranca: bool
    sct_flagmantemstatus: bool
    sct_respautorizador: str
    sct_portadorcupomsaldo: str
    sct_flagencargosmulta: bool
    sct_flagemiteextrato: int
    sct_statuscongelado: int
    sct_statusdescongelado: int
    sct_flagapropriajuros: bool
    sct_flagajustaencargosvencimento: bool
    sct_flagajustedebitovencimento: bool
    sct_flagdebitosfaturadosprox: bool
    sct_flagemitecartao: bool
    sct_statusgeraembossing: bool
    sct_flagencargos: bool
    sct_flagmulta: bool
    sct_statusgeranegativacao: bool
    sct_flagmovimentocontascredoras: int
    sct_flagalteralimitelote: bool
    sct_flagcancelacartao: bool
    sct_flagperda: bool
    sct_flagaceitanovacontagrupoproduto: int
    sct_flagpermiteautorizacaovialistagem: int
    sct_flagpermiteacordo: int
    sct_cupomsaldodiasatrasobloqueio: str
    sct_flagalteralimite: bool
    sct_flagpermitealteracaovencto: bool
    sct_flagcancelamento: bool
    sct_flagnaopermiteacordo: bool
    sct_flagnormalizaconta: int
    sct_flagcadastrosenha: int
    sct_flagapropriacreditobeneficio: int
    sct_flagdestacastatusatdo: int
    sct_flagentracreliq: bool
    sct_flagofereceseguroatdo: str
    sct_flagcancelaconta: int
    sct_flagdemissao: int
    sct_flagtratamentoacordo: int
    sct_statusacordo: int
    sct_flagiofrotativo: bool
    sct_flagantecipadivida: bool
    sct_flagrefinanciadivida: bool
    sct_flaglimitessegmentados: int
    sct_flagcompraestocada: bool
    sct_flagreversivel: bool
    sct_flagstatusfraude: bool
    sct_flagliberacreditoconvenio: int
    sct_flagconsignar: bool
    sct_flagenviarpreviaconsignado: bool
    sct_flagfaztransferencia: bool
    sct_flagrecebetransferencia: bool
    sct_flaggeratarifa: bool
    sct_flagreemiteautcartao: bool
    sct_prioridade: int
    sct_flagpermitebloqueio: int
    sct_flagpermitedesbloqueio: int
    oc_id_origemcomercial: int
    oc_id_emissor: int
    oc_nome: str
    oc_descricao: str
    oc_id_promotorvenda: int
    oc_flagpreaprovado: bool
    oc_flagaprovacaoimediata: bool
    oc_nomefantasiaplastico: str
    oc_id_estabelecimento: int
    oc_flagsituacaoorigem: bool
    oc_flagcartaoprovisorio: bool
    oc_flagcartaodefinitivo: bool
    oc_usuario: str
    oc_senha: str
    oc_origemexterna: bool
    oc_flagmodificado: bool
    oc_id_tipoorigem: int
    oc_tipopessoa: int
    oc_responsavel: str
    oc_flagenviafaturausuario: int
    oc_flagcreditofaturamento: int
    oc_flagconcedelimiteprovisorio: bool
    oc_id_grupoorigemcomercial: int
    oc_flagdigitalizardoc: bool
    oc_flagembossingloja: bool
    oc_flagconsultaprevia: bool
    oc_flagembossacartaodefinitivo: bool
    oc_flagenviasms: bool
    tos_id_tipoorigem: int
    tos_descricao: str
    tos_flagrelatoriotad: bool
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    production_date: date




# Dataset: pfs_raw_conductor, Table: controle_vencimento
class Controle_vencimento(BaseModel):
    hash_key: str
    source: str
    cv_id_controlevencimentos: int
    cv_datavencimento: datetime
    cv_dataprevistacorte: datetime
    cv_datarealizacaocorte: datetime
    cv_dataprevistafaturamento: datetime
    cv_datarealizacaofaturamento: datetime
    cv_dataprevistavencimento: datetime
    cv_datarealizacaovencimento: datetime
    cv_usuario: str
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    production_date: date




# Dataset: pfs_raw_conductor, Table: dado_bancario_conta
class Dado_bancario_conta(BaseModel):
    hash_key: str
    source: str
    db_id_conta: int
    db_banco: int
    db_agencia: int
    db_contacorrente: str
    db_dvagencia: int
    db_dvcontacorrente: str
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    db_id_tipocontabancaria: int
    production_date: date




# Dataset: pfs_raw_conductor, Table: estabelecimento
class Estabelecimento(BaseModel):
    hash_key: str
    source: str
    es_id_estabelecimento: int
    es_nome: str
    es_descricao: str
    es_id_tipoestabelecimento: int
    es_flagautomacao: int
    es_quantidadepos: int
    es_id_credor: int
    es_cgc: str
    es_numeroestabelecimento: int
    es_dvnumeroestabelecimento: str
    es_contato: str
    es_cargocontato: str
    es_email: str
    es_matrizfilial: int
    es_tipopagamento: int
    es_banco: int
    es_agencia: int
    es_contacorrente: str
    es_dvcontacorrente: str
    es_nomefantasia: str
    es_aberturaempresa: str
    es_dataconsulta1: datetime
    es_identidade1: int
    es_status1: int
    es_dataconsulta2: datetime
    es_identidade2: int
    es_status2: int
    es_dataconsulta3: datetime
    es_identidade3: int
    es_status3: int
    es_datacadastramento: datetime
    es_obs: str
    es_terminal: str
    es_mensagem: str
    es_cartaodigitado: bool
    es_dvagencia: str
    es_inativo: bool
    es_flagarquivosecrfazenda: bool
    es_associadospcbrasil: int
    es_tipoconta: int
    es_id_tipoendereco: int
    es_tipologradouro: str
    es_nomelogradouro: str
    es_numeroendereco: int
    es_complementoendereco: str
    es_bairro: str
    es_cep: str
    es_uf: str
    es_pais: str
    es_datainclusao: datetime
    es_id_municipio: int
    es_cidade: str
    es_nomelogradouro2: str
    es_numeroendereco2: int
    es_complementoendereco2: str
    es_id_municipio2: int
    es_cidade2: str
    es_bairro2: str
    es_cep2: str
    es_uf2: str
    es_correspondencia: int
    es_id_emissor: int
    es_obsdescred: str
    es_flagdescred: bool
    es_usuario: str
    es_id_bandeira: int
    es_codigomcc: int
    es_id_grupomcc: int
    es_id_moeda: int
    es_mcc: int
    es_id_pais: int
    es_usuarioapl: str
    tes_id_tipoestabelecimento: int
    tes_tipoestabelecimento: str
    tes_ticketmedio: float
    tes_percentual: float
    mo_codigomoeda: str
    mo_descricao: str
    mo_simbolo: str
    mo_id_moeda: int
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    production_date: date




# Dataset: pfs_raw_conductor, Table: estabelecimento_externo
class Estabelecimento_externo(BaseModel):
    hash_key: str
    source: str
    ee_id_estabelecimento_visa: int
    ee_nome_estabelecimento_visa: str
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    production_date: date




# Dataset: pfs_raw_conductor, Table: estado_conta
class Estado_conta(BaseModel):
    hash_key: str
    source: str
    ec_id_conta: int
    ec_id_emissor: int
    ec_id_produto: int
    ec_proximovencimentoreal: datetime
    ec_proximovencimentopadrao: str
    ec_inicioperiodofaturado: datetime
    ec_terminoperiodofaturado: datetime
    ec_saldoextratoanterior: float
    ec_basemultacobrada: float
    ec_valorminimoextrato: float
    ec_numerociclo: int
    ec_financiavelextrato: float
    ec_naofinanciavelextrato: float
    ec_dataprevistafinanciamento: datetime
    ec_vencimentorealanterior: datetime
    ec_vencimentopadraoanterior: str
    ec_dataregularizacaofinanciamento: datetime
    ec_multaextrato: float
    ec_internacionaisdolarextrato: float
    ec_internacionaisreaisextrato: float
    ec_debitosinternacionais: float
    ec_comprasinternacionaisdolar: float
    ec_saquesinternacionaisdolar: float
    ec_diversosinternacionaisdolar: float
    ec_despesasinternacionaisdolar: float
    ec_despesasinternacionaisreais: float
    ec_parcelasfinanciaveis: float
    ec_comprasnacionais: float
    ec_saquesnacionais: float
    ec_tarifasnacionais: float
    ec_debitosdiversosnacionais: float
    ec_multa: float
    ec_encargosfinanciamento: float
    ec_encargosatraso: float
    ec_acertospositivosdiversos: float
    ec_creditosnacionais: float
    ec_debitosnacionais: float
    ec_pagamentos: float
    ec_creditopagamentominimo: float
    ec_correcaocreditominimo: float
    ec_acertosnegativosdiversos: float
    ec_saldoanteriorfinal: float
    ec_financiavelanteriorfinal: float
    ec_datafinanciavelfinal: datetime
    ec_financiadoanteriorfinal: float
    ec_datafinanciadofinal: datetime
    ec_naofinanciavelanteriorfinal: float
    ec_datanaofinanciavelfinal: datetime
    ec_saldoatualfinal: float
    ec_financiavelatualfinal: float
    ec_naofinanciavelatualfinal: float
    ec_flagmulta: bool
    ec_flagrefinanciamento: bool
    ec_flaganuidade: bool
    ec_flagemiteextrato: bool
    ec_flagcobrafinanciamento: int
    ec_flagcobramulta: int
    ec_saldoextratoanteriorajustado: float
    ec_statusconta: int
    ec_flagalteracaovencimento: int
    ec_valorminimoextratooriginal: float
    ec_parcelasnaofinanciaveis: float
    ec_valorminimoextratoanterior: float
    ec_valorjamultado: float
    ec_comprajuros: float
    ec_pontosconcedidos: float
    ec_pontosremanescentes: float
    ec_vencimentobasejurospadrao: str
    ec_vencimentobasejurosreal: datetime
    ec_rotativopagajuros: float
    ec_saquepagajuros: float
    ec_comprasjurospagajuros: float
    ec_vencimentoprox: datetime
    ec_saquefaturadoprox: float
    ec_comprasjurosfaturadoprox: float
    ec_debitosfaturadosprox: float
    ec_totalprox: float
    ec_vencimentoposprox: datetime
    ec_totalposprox: float
    ec_totalfuturo: float
    ec_flagemfaturamento: int
    ec_proximovalorminimo: float
    ec_statuscontabil: int
    ec_pontuacaototalciclo: float
    ec_pontuacaousadaciclo: float
    ec_jurosmora: float
    ec_saldocongelado: float
    ec_principalparcelado: float
    ec_comprassemjurosnaovencidas: float
    ec_parcelascomjurosnaovencidas: float
    ec_saldofuturojuros: float
    ec_saldofuturoparceladocomjuros: float
    ec_saldofuturoparceladosemjuros: float
    ec_encargosciclo: float
    ec_taxadiariaciclo: float
    ec_id_saldodiario: int
    ec_dataentradacreliq: datetime
    ec_saldoentradacreliq: float
    ec_saldojurosacordo: float
    ec_databaserendimento: datetime
    ec_dataultaplicacao: datetime
    ec_saldoaplicacao: float
    ec_rendimentoacumulado: float
    ec_provisaoirdatabase: float
    ec_flagoverlimit: bool
    ec_qtdeisencaotarifa: int
    ec_flagfaturaporemail: bool
    ec_flagsmsextratoincondicional: int
    ec_saldocompraprogramada: float
    ec_debitosopcionais: float
    ec_debitosrecorrentes: float
    ec_seguros: float
    ec_nossonumero: str
    ec_vencpadraoanterior: datetime
    ec_vencbasejurospadrao: datetime
    ec_proximovencpadrao: datetime
    ec_statusbonussabado: int
    ec_flagdiferenciado: bool
    sd_datasaldo: datetime
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    production_date: date




# Dataset: pfs_raw_conductor, Table: evento_externo_ajuste
class Evento_externo_ajuste(BaseModel):
    hash_key: str
    source: str
    ea_id_eventoajuste: int
    ea_id_movimentoajuste: int
    ea_id_tipoajuste: int
    ea_datainclusao: datetime
    ea_dataorigem: datetime
    ea_datamovimento: datetime
    ea_id_conta: int
    ea_valor: float
    ea_sequencialcartao: int
    ea_datavencimentopadrao: str
    ea_datavencimentoreal: datetime
    ea_id_estabelecimento: int
    ea_id_transacaooriginal: int
    ea_status: int
    ea_responsavelinclusao: str
    ea_dataprocessamentolojista: datetime
    ea_id_borderaux: int
    ea_dataprocessamentolojista2: datetime
    ea_id_eventoexternooriginal: int
    ea_tipoeventoexternooriginal: str
    ea_statuslojista: int
    ea_id_estabelecimento_visa: int
    ea_valordestino: float
    ea_id_incoming: int
    ea_parcelapedidaincoming: int
    ea_origemresolucao: str
    ea_datavencpadrao: datetime
    ea_datadebitoconta: datetime
    ea_descricaoestabelecimentoexterno: str
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    production_date: date




# Dataset: pfs_raw_conductor, Table: evento_externo_compra_nao_processado
class Evento_externo_compra_nao_processado(BaseModel):
    hash_key: str
    source: str
    een_id_eventocompra: int
    een_id_origem: int
    een_id_movimento: int
    een_id_remessa: int
    een_dataremessa: datetime
    een_lote: int
    een_numeroestabelecimento: int
    een_dvnumeroestabelecimento: int
    een_descricao: str
    een_cartao: str
    een_datacompra: datetime
    een_codigoautorizacao: str
    een_id_operacao: int
    een_valorcompra: float
    een_numeroparcelas: int
    een_valorparcela: float
    een_quantidademoeda: float
    een_fatortotalajustado: float
    een_fatorbancoajustado: float
    een_fatortaxaadministracao: float
    een_fatorcomissaogarantia: float
    een_fatortotal: float
    een_id_estabelecimento: int
    een_datapagamentolojista: datetime
    een_datafinanciamento: datetime
    een_datamovimento: datetime
    een_datavencimentocomprainicial: datetime
    een_datavencimentocomprafinal: datetime
    een_flagselecionado: int
    een_flagrefinanciamento: int
    een_tipocompra: int
    een_tipopagamento: int
    een_tipocalculoprestacao: int
    een_tipoliquidacao: int
    een_id_credor: int
    een_valorcomissao: float
    een_valorliquido: float
    een_valorcontrato: float
    een_valorencargostotais: float
    een_valorencargosbancarios: float
    een_valorgarantias: float
    een_valoragenciamento: float
    een_tipoentrada: str
    een_taxajuros: float
    een_valoriof: float
    een_valortac: float
    een_id_autorizacao: int
    een_id_conta: int
    een_dataentradacompra: datetime
    een_primeiraparcela: float
    een_origem: str
    een_origemresolucao: str
    een_status: int
    een_datavencimentoreal: datetime
    een_datavencimentopadrao: str
    een_dataprocessamentolojista: datetime
    een_carencia: int
    een_id_contaportador: int
    een_numerocontrato: str
    een_id_borderaux: int
    een_dataprocessamentolojista2: datetime
    een_valorcomissao2: float
    een_statuslojista: int
    een_id_eventocompraorigem: int
    een_codigomoeda: int
    een_mcc: int
    een_codigoacquiring: int
    een_id_incoming: int
    een_identificacaotransacao: str
    een_id_estabelecimento_visa: int
    een_nome_estabelecimento_visa: str
    een_cicloconciliacao: int
    een_codigomoedadestino: str
    een_valordestino: float
    een_valororigem: float
    een_valortaxasaque: float
    een_id_eventoexternoredecompartilhada: int
    een_id_emissorredecompartilhada: int
    een_id_estabelecimento_externo: int
    een_id_cartao: int
    een_pdv: str
    een_databaixa: datetime
    een_acquirereferencenumber: str
    een_lifecicleauthorization: int
    een_id_nivelseguranca: str
    een_taxaembarque: float
    een_valorentrada: float
    een_descricaoitempedido: str
    een_id_pedido: int
    een_codautredecompartilhada: str
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    production_date: date
    een_transactionuuid: str
    een_cotacao: float




# Dataset: pfs_raw_conductor, Table: evento_externo_compra_processado
class Evento_externo_compra_processado(BaseModel):
    hash_key: str
    source: str
    ee_id_eventocompra: int
    ee_id_origem: int
    ee_id_movimento: int
    ee_id_remessa: int
    ee_dataremessa: datetime
    ee_lote: int
    ee_numeroestabelecimento: int
    ee_dvnumeroestabelecimento: int
    ee_descricao: str
    ee_cartao: str
    ee_datacompra: datetime
    ee_codigoautorizacao: str
    ee_id_operacao: int
    ee_valorcompra: float
    ee_numeroparcelas: int
    ee_valorparcela: float
    ee_quantidademoeda: float
    ee_fatortotalajustado: float
    ee_fatorbancoajustado: float
    ee_fatortaxaadministracao: float
    ee_fatorcomissaogarantia: float
    ee_fatortotal: float
    ee_id_estabelecimento: int
    ee_datapagamentolojista: datetime
    ee_datafinanciamento: datetime
    ee_datamovimento: datetime
    ee_datavencimentocomprainicial: datetime
    ee_datavencimentocomprafinal: datetime
    ee_flagselecionado: int
    ee_flagrefinanciamento: int
    ee_tipocompra: int
    ee_tipopagamento: int
    ee_tipocalculoprestacao: int
    ee_tipoliquidacao: int
    ee_id_credor: int
    ee_valorcomissao: float
    ee_valorliquido: float
    ee_valorcontrato: float
    ee_valorencargostotais: float
    ee_valorencargosbancarios: float
    ee_valorgarantias: float
    ee_valoragenciamento: float
    ee_tipoentrada: str
    ee_taxajuros: float
    ee_valoriof: float
    ee_valortac: float
    ee_id_autorizacao: int
    ee_id_conta: int
    ee_dataentradacompra: datetime
    ee_primeiraparcela: float
    ee_origem: str
    ee_origemresolucao: str
    ee_status: int
    ee_datavencimentoreal: datetime
    ee_datavencimentopadrao: str
    ee_dataprocessamentolojista: datetime
    ee_carencia: int
    ee_id_contaportador: int
    ee_numerocontrato: str
    ee_id_borderaux: int
    ee_dataprocessamentolojista2: datetime
    ee_valorcomissao2: float
    ee_statuslojista: int
    ee_id_eventocompraorigem: int
    ee_codigomoeda: int
    ee_mcc: int
    ee_codigoacquiring: int
    ee_id_incoming: int
    ee_identificacaotransacao: str
    ee_id_estabelecimento_visa: int
    ee_nome_estabelecimento_visa: str
    ee_cicloconciliacao: int
    ee_codigomoedadestino: str
    ee_valordestino: float
    ee_valororigem: float
    ee_valortaxasaque: float
    ee_id_eventoexternoredecompartilhada: int
    ee_id_emissorredecompartilhada: int
    ee_id_estabelecimento_externo: int
    ee_id_cartao: int
    ee_pdv: str
    ee_databaixa: datetime
    ee_acquirereferencenumber: str
    ee_lifecicleauthorization: int
    ee_id_nivelseguranca: int
    ee_taxaembarque: float
    ee_valorentrada: float
    ee_descricaoitempedido: str
    ee_id_pedido: int
    ee_codautredecompartilhada: str
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    ee_transactionuuid: str
    ee_flagtransacaointernet: bool
    ee_flagtransacaostandin: bool
    ee_codestabelecimentocomercial: str
    ee_id_adquirente: int
    ee_valorsaqueapartado: float
    ee_cotacao: float
    ee_flagtransacaotokenizada: bool
    ee_datavencpadrao: str
    production_date: date




# Dataset: pfs_raw_conductor, Table: evento_externo_pagamento
class Evento_externo_pagamento(BaseModel):
    hash_key: str
    source: str
    ep_id_eventopagamento: int
    ep_banco: int
    ep_datamovimento: datetime
    ep_datapagamento: datetime
    ep_nossonumero: float
    ep_arquivocobrancabancaria: str
    ep_datavencimento: datetime
    ep_valorpago: float
    ep_numerodocumento: float
    ep_cartao: str
    ep_id_movimentopagamentopendente: int
    ep_lote: int
    ep_defasagemcobranca: int
    ep_meioliquidacao: str
    ep_id_estabelecimento: int
    ep_id_autorizacao: int
    ep_id_conta: int
    ep_id_operacao: int
    ep_codigoautenticacao: str
    ep_dataentradapagamento: datetime
    ep_datavencimentopadrao: str
    ep_datavencimentoreal: datetime
    ep_origem: str
    ep_origemresolucao: str
    ep_restituicaosaque: float
    ep_status: int
    ep_dataprocessamentolojista: datetime
    ep_id_borderaux: int
    ep_dataprocessamentolojista2: datetime
    ep_codigoautorizacao: str
    ep_statuslojista: int
    ep_mcc: int
    ep_codigomoeda: int
    ep_nome_estabelecimento_visa: str
    ep_id_estabelecimento_visa: int
    ep_id_incoming: int
    ep_valordolar: float
    ep_id_cartao: int
    ep_id_eventoexternoredecompartilhada: int
    ep_id_emissorredecompartilhada: int
    ep_id_estabelecimento_externo: int
    ep_codautredecompartilhada: str
    ep_databaixa: datetime
    ep_datavencpadrao: datetime
    ep_flagusoudiasperdao: bool
    ep_datapagamentoreal: datetime
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    production_date: date




# Dataset: pfs_raw_conductor, Table: fatura
class Fatura(BaseModel):
    hash_key: str
    source: str
    fa_id_historico: int
    fa_id_conta: int
    fa_id_emissor: int
    fa_id_produto: int
    fa_datavencimentoreal: datetime
    fa_datavencimentopadrao: str
    fa_inicioperiodofaturado: datetime
    fa_terminoperiodofaturado: datetime
    fa_saldoextratoanterior: float
    fa_saldoextratoanteriorajustado: float
    fa_basemultacobrada: float
    fa_valorminimoextrato: float
    fa_financiavelextrato: float
    fa_naofinanciavelextrato: float
    fa_multaextrato: float
    fa_numerociclo: int
    fa_internacionaisdolarextrato: float
    fa_internacionaisreaisextrato: float
    fa_debitosinternacionais: float
    fa_comprasinternacionaisdolar: float
    fa_saquesinternacionaisdolar: float
    fa_diversosinternacionaisdolar: float
    fa_despesasinternacionaisdolar: float
    fa_despesasinternacionaisreais: float
    fa_parcelasfinanciaveis: float
    fa_comprasnacionais: float
    fa_saquesnacionais: float
    fa_tarifasnacionais: float
    fa_debitosdiversosnacionais: float
    fa_multa: float
    fa_encargosfinanciamento: float
    fa_encargosatraso: float
    fa_acertospositivosdiversos: float
    fa_creditosnacionais: float
    fa_debitosnacionais: float
    fa_pagamentos: float
    fa_creditopagamentominimo: float
    fa_correcaocreditominimo: float
    fa_acertosnegativosdiversos: float
    fa_saldoanteriorfinal: float
    fa_financiavelanteriorfinal: float
    fa_naofinanciavelanteriorfinal: float
    fa_saldoatualfinal: float
    fa_financiavelatualfinal: float
    fa_naofinanciavelatualfinal: float
    fa_flagmulta: bool
    fa_flagrefinanciamento: bool
    fa_flaganuidade: bool
    fa_flagemiteextrato: bool
    fa_aniversarioanuidade1: int
    fa_aniversarioanuidade2: int
    fa_id_caracteristicaanuidade: int
    fa_vencimentorealanterior: datetime
    fa_vencimentopadraoanterior: str
    fa_qtdevencimento: int
    fa_vencimento1: int
    fa_vencimento2: int
    fa_vencimento3: int
    fa_datahoraatualizacao: datetime
    fa_datacadastramento: datetime
    fa_quantidadeportadores: int
    fa_status: int
    fa_flagpagamento: bool
    fa_numerodocumento: float
    fa_parcelasnaofinanciaveis: float
    fa_id_endereco: int
    fa_jurosmora: float
    fa_pontuacaototalciclo: float
    fa_pontuacaousadaciclo: float
    fa_datavencimentocobranca: datetime
    fa_principalparcelado: float
    fa_totalfuturo: float
    fa_pontosconcedidos: float
    fa_pontosremanescentes: float
    fa_valorminimoextratoanterior: float
    fa_cetanual: float
    fa_cotacaodolar: str
    fa_saldoaplicacao: float
    fa_cotacaodolarcorte: float
    fa_datafechamentoproxfatura: datetime
    fa_limitetotalcreditoparcelado: float
    fa_limitetotalcreditoparcelaparcelado: float
    fa_limiteglobalcreditohist: float
    fa_id_sequencial_arquivo: int
    fa_encargospagminimo: float
    fa_flagoverlimit: bool
    fa_flagfaturaporemail: bool
    fa_statusenviofaturaporemail: bool
    fa_flagsmsextratoincondicional: int
    fa_debitosopcionais: float
    fa_debitosrecorrentes: float
    fa_seguros: float
    fa_datapostagem: datetime
    fa_cetrotativoperiodo: float
    fa_cetrotativoproxperiodo: float
    fa_cetparceladoperiodo: float
    fa_cetparceladoproxperiodo: float
    fa_cetsaqueperiodo: float
    fa_cetsaqueproxperiodo: float
    fa_encargosrotativoperiodo: float
    fa_encargosrotativoproxperiodo: float
    fa_encargosparceladoperiodo: float
    fa_encargosparceladoproxperiodo: float
    fa_encargossaqueperiodo: float
    fa_encargossaqueproxperiodo: float
    fa_valor_parcelado_futuro: float
    fa_cet_cdc_mensal: float
    fa_cet_cdc_anual: float
    fa_cet_emprestimo_mensal: float
    fa_cet_emprestimo_anual: float
    fa_valor_cet_per_rotat: float
    fa_valor_cet_prox_per_rotat: float
    fa_valor_cet_per_parc: float
    fa_valor_cet_prox_per_parc: float
    fa_valor_cet_per_saque: float
    fa_valor_cet_prox_per_saque: float
    fa_valor_cet_anual_rotativo: float
    fa_valor_cet_anual_parcelado: float
    fa_valor_cet_anual_saque: float
    fa_anoquitacao: int
    fa_datavencpadrao: datetime
    fa_vencpadraoanterior: datetime
    fa_flagdiferenciado: bool
    fa_limitemaximo: float
    fa_limiteglobalcredito: float
    fa_limitesaquenacglobal: float
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    production_date: date




# Dataset: pfs_raw_conductor, Table: grade_produto
class Grade_produto(BaseModel):
    hash_key: str
    source: str
    gp_id_gradeproduto: int
    gp_id_conta: int
    gp_id_produtoorigem: int
    gp_id_origemcomercialorigem: int
    gp_id_produtodestino: int
    gp_id_origemcomercialdestino: int
    gp_id_arquivo: int
    gp_datasolicitacao: datetime
    gp_status: int
    gp_datamigracao: datetime
    gp_limiteanterior: float
    gp_limitenovo: float
    gp_flagorigemws: int
    gp_responsavel: str
    gp_flaggradeautomatico: int
    oc_id_origemcomercial: int
    oc_id_emissor: int
    oc_nome: str
    oc_descricao: str
    oc_id_promotorvenda: int
    oc_flagpreaprovado: bool
    oc_flagaprovacaoimediata: bool
    oc_nomefantasiaplastico: str
    oc_id_estabelecimento: int
    oc_flagsituacaoorigem: bool
    oc_flagcartaoprovisorio: bool
    oc_flagcartaodefinitivo: bool
    oc_usuario: str
    oc_senha: str
    oc_origemexterna: bool
    oc_flagmodificado: bool
    oc_id_tipoorigem: int
    oc_tipopessoa: int
    oc_responsavel: str
    oc_flagenviafaturausuario: int
    oc_flagcreditofaturamento: int
    oc_flagconcedelimiteprovisorio: bool
    oc_id_grupoorigemcomercial: int
    oc_flagdigitalizardoc: bool
    oc_flagembossingloja: bool
    oc_flagconsultaprevia: bool
    oc_flagembossacartaodefinitivo: bool
    oc_flagenviasms: bool
    gc_id_grupoorigemcomercial: int
    gc_descricao: str
    tg_id_tipoorigem: int
    tg_descricao: str
    tg_flagrelatoriotad: bool
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    gp_dataatualizacao: datetime
    gp_dadocriacaograde: str
    gp_reprocessar: bool
    gp_erro: bool
    gp_descricaoerro: str
    gp_id_statuscriacaograde: int
    gp_id_pessoafisica: int
    gp_id_estabelecimento: int
    gp_matricula: str
    production_date: date




# Dataset: pfs_raw_conductor, Table: integracao_grade
class Integracao_grade(BaseModel):
    hash_key: str
    source: str
    ig_id_grade: int
    ig_id_conta: int
    ig_idstatusintegracao: int
    ig_statusintegracao: str
    ig_datacadastramento: datetime
    ig_estabelecimento: str
    ig_email: str
    ig_tipodocumento: int
    ig_cpf: str
    ig_idproduto: int
    ig_motivoemissaocartao: str
    ig_motivoreemissaocartao: str
    ig_statuscartaoantigo: int
    ig_statuscartaonovo: int
    ig_limiteinterno: float
    ig_limite: float
    ig_datafimvalidade: datetime
    ig_portador: int
    ig_cartaonovo: str
    ig_cartaoantigo: str
    ig_bloqueiocartaoantigo: str
    ig_chapa: str
    ig_chapapromotor: str
    ig_conta: str
    ig_datacriacaoconta: datetime
    ig_tipocobranca: str
    ig_codanuidade: str
    ig_coddesconto: str
    ig_codaceite: str
    ig_codlogonovo: str
    ig_dataenvio: datetime
    ig_serial_tablet: str
    ig_observacao: str
    ig_id_cartao: int
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    production_date: date




# Dataset: pfs_raw_conductor, Table: limite_disponibilidade
class Limite_disponibilidade(BaseModel):
    hash_key: str
    source: str
    ld_id_conta: int
    ld_id_emissor: int
    ld_limitesaquenacperiodo: float
    ld_limitesaquenacglobal: float
    ld_limitecompranac: float
    ld_limiteparceladonac: float
    ld_limitesaqueintperiodo: float
    ld_limitesaqueintglobal: float
    ld_limitecompraint: float
    ld_limiteparceladoint: float
    ld_limiteglobalcredito: float
    ld_disponibsaquenacglobal: float
    ld_disponibcompranac: float
    ld_disponibparceladonac: float
    ld_disponibsaqueintglobal: float
    ld_disponibcompraint: float
    ld_disponibparcelasnac: float
    ld_disponibglobalcredito: float
    ld_limiteparcelasnac: float
    ld_limiteparcelasint: float
    ld_limitepontuacao: float
    ld_margemconsignada: float
    ld_tipotarifa: str
    ld_percdescontotarifa: int
    ld_limitemaximo: float
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    production_date: date




# Dataset: pfs_raw_conductor, Table: limite_portador
class Limite_portador(BaseModel):
    hash_key: str
    source: str
    lp_id_limiteportador: int
    lp_id_conta: int
    lp_portador: int
    lp_limite: float
    lp_disponivel: float
    lp_id_usuario: int
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    production_date: date




# Dataset: pfs_raw_conductor, Table: parcelamento_fatura
class Parcelamento_fatura(BaseModel):
    hash_key: str
    source: str
    pf_id_parcelamento: int
    pf_id_conta: int
    pf_id_eventocompra: int
    pf_datavencimentopadrao: datetime
    pf_datamovimento: datetime
    pf_id_regracampanha: int
    pf_regra: str
    pf_statusadesao: int
    pf_descricaostatusadesao: str
    pf_id_servicotipo: int
    pf_tiposervico: str
    pf_totalparcelamento: float
    pf_saldoatualfatura: float
    pf_valorentrada: float
    pf_flagcomentrada: bool
    pf_dataprocessamentoadesao: datetime
    pf_quantidadeparcelas: int
    pf_valorparcela: float
    pf_taxarefinanciamento: float
    pf_custoefetivototal: float
    pf_valoriof: float
    pf_valortac: float
    pf_valortotalrefinanciamento: float
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    production_date: date




# Dataset: pfs_raw_conductor, Table: produto
class Produto(BaseModel):
    hash_key: str
    source: str
    pr_id_produto: int
    pr_id_emissor: int
    pr_id_produtotipo: int
    pr_id_fantasiabasica: int
    pr_id_variante: int
    pr_bin: int
    pr_nome: str
    pr_descricao: str
    pr_caracteristicas: str
    pr_banco: int
    pr_agencia: int
    pr_contacorrente: str
    pr_carteira: int
    pr_cedente: str
    pr_especie: str
    pr_especiedoc: str
    pr_aceite: str
    pr_instrucoes: str
    pr_localpagamento1: str
    pr_localpagamento2: str
    pr_proximonumerodocumento: float
    pr_mensagemextrato: str
    pr_nomeextrato: str
    pr_nomearquivoembossing: str
    pr_flagsituacaoproduto: bool
    pr_codigocedente: str
    pr_codigoarquivocarteira: str
    pr_nomearquivoextrato: str
    pr_id_plasticodefault: int
    pr_flagpersonalizado: str
    pr_propostaproduto: bool
    pr_bancoacordo: int
    pr_agenciaacordo: int
    pr_contacorrenteacordo: str
    pr_carteiraacordo: int
    pr_flagcpfembossing: bool
    pr_id_tipoproduto: int
    pr_codigoproduto: str
    pr_logo: str
    pr_id_bandeira: int
    pr_id_cliente: int
    pr_codigocedenteacordo: str
    pr_instrucoesacordo: str
    pr_validacaoregrasenha: int
    pr_bancofatcarona: int
    pr_agenciafatcarona: int
    pr_contacorrentefatcarona: str
    pr_carteirafatcarona: int
    pr_codigocedentefatcarona: str
    pr_especiedocfatcarona: str
    pr_aceitefatcarona: str
    pr_localpagamento1fatcarona: str
    pr_id_servicecode: int
    pr_id_bancoagenciaconta: int
    pr_id_bancoagenciaconta_acordos: int
    tpr_id_tipoproduto: int
    tpr_descricao: str
    tpr_flagcreditobeneficio: bool
    tpr_flagconsignado: bool
    tpr_flagprepago: bool
    tpr_id_perfilacessousuario: int
    tpr_flagantecipacao: bool
    tpr_flagcompraprogramada: bool
    sc_id_servicecode: int
    sc_servicecode: str
    sc_descricao: str
    sc_flagativo: bool
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    production_date: date




# Dataset: pfs_raw_conductor, Table: refinanciamento
class Refinanciamento(BaseModel):
    hash_key: str
    source: str
    rf_id_refinanciamento: int
    rf_id_conta: int
    rf_id_eventocompra: int
    rf_datarefinanciamento: datetime
    rf_rotativopagajuros: float
    rf_debitosfaturadosprox: float
    rf_totalposprox: float
    rf_totalrefinanciado: float
    rf_numeroparcelas: int
    rf_valorparcela: float
    rf_taxajuros: float
    rf_valoriof: float
    rf_cet: float
    rf_responsavel: str
    rf_status: int
    rf_valorantecipacaopendente: float
    rf_valorparcelasfuturas: float
    rf_valorabatimentojuros: float
    rf_flagsaldototal: bool
    rf_totalarefinanciar: float
    rf_statuscashback: int
    rf_percentualcashback: float
    rf_valorcashback: float
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    production_date: date




# Dataset: pfs_raw_conductor, Table: seguro_adesao_item
class Seguro_adesao_item(BaseModel):
    hash_key: str
    source: str
    asi_id_adesaoseguroitem: int
    asi_id_adesaoseguro: int
    asi_id_pessoa: int
    asi_cd_item: int
    asi_dt_iniciovigencia: datetime
    asi_dt_terminovigencia: datetime
    asi_fl_titular: bool
    asi_tp_statusintegracao: int
    asi_dt_exclusao: datetime
    asi_dt_adesao: datetime
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    production_date: date




# Dataset: pfs_raw_conductor, Table: seguro_endereco
class Seguro_endereco(BaseModel):
    hash_key: str
    source: str
    id_endereco: int
    nm_logradouro: str
    no_logradouro: str
    dc_complemento: str
    nm_bairro: str
    nm_municipio: str
    cd_uf: str
    no_cep: str
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    production_date: date




# Dataset: pfs_raw_conductor, Table: seguro_pessoa
class Seguro_pessoa(BaseModel):
    hash_key: str
    source: str
    pes_id_pessoa: int
    pes_nm_pessoa: str
    pes_no_cpf: str
    pes_dt_nascimento: datetime
    pes_tp_sexo: int
    pes_nm_mae: str
    pes_no_rg: str
    pes_dt_emissaorg: str
    pes_cd_uf_rg: str
    pes_no_pis: str
    pes_no_cns: str
    pes_no_declaracaonascidovivo: str
    pes_tp_estadocivil: int
    pes_tp_grauparentesco: int
    pes_id_endereco: int
    pes_id_contato: int
    pes_tp_pessoa: str
    fl_apenasresponsavelfinanceiro: bool
    id_integracaoparceiro: int
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    production_date: date




# Dataset: pfs_raw_conductor, Table: transacao_corrente
class Transacao_corrente(BaseModel):
    hash_key: str
    source: str
    tc_id_transacao: int
    tc_id_tipotransacao: int
    tc_id_emissor: int
    tc_id_produto: int
    tc_id_conta: int
    tc_portador: int
    tc_sequencialcartao: int
    tc_datavencimentoreal: datetime
    tc_datavencimentopadrao: str
    tc_datageracao: datetime
    tc_valor: float
    tc_historico: str
    tc_statuscontabil: int
    tc_statusgerencial: int
    tc_id_eventoexterno: int
    tc_dataorigem: datetime
    tc_statusconta: int
    tc_faturado: int
    tc_id_estabelecimento: int
    tc_datafaturamento: datetime
    tc_complemento: str
    tc_id_transacaoestorno: int
    tc_flagestornado: int
    tc_parcela: int
    tc_plano: int
    tc_id_estabelecimento_visa: int
    tc_id_planocredito: int
    tc_id_processoprocedure: int
    tc_datavencpadrao: datetime
    tc_id_taxajurosapropriacao: int
    dh_relatorio: datetime
    operation: str
    operation_sequence: int
    production_date: date


